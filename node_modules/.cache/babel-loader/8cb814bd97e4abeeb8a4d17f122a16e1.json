{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/inputs/State.js\";\nimport statesJSON from \"../../data/states.json\";\nimport ButtonEdit from \"../elements/ButtonEdit\";\nimport RangeTicks from \"../elements/RangeTicks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst State = _ref => {\n  let {\n    customerInputs,\n    //setCustomerInputs,\n    setPADDRegion,\n    inStep,\n    whichStep,\n    setWhichStep,\n    editThis,\n    setEditThis,\n    setCustomerInputs\n  } = _ref;\n  let states = JSON.parse(JSON.stringify(statesJSON));\n\n  const handleChange = e => {\n    setCustomerInputs({ ...customerInputs,\n      gasZTRPrice: e.target.value\n    });\n  };\n\n  const handleClick = e => {\n    setCustomerInputs({ ...customerInputs,\n      gasZTRPrice: e.target.value\n    });\n  };\n\n  const handleEdit = e => {\n    setEditThis({\n      gasZTRPrice: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: false,\n      state: !editThis.state\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"location\",\n      children: [inStep ? \"Which state do you operate in?\" : \"State\", /*#__PURE__*/_jsxDEV(ButtonEdit, {\n        whichStep,\n        onClick: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), inStep || editThis.state ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        htmlFor: \"location\",\n        value: customerInputs.location,\n        onChange: e => {\n          handleChange(e);\n          const newState = states.find(state => state.abbr === e.target.value);\n          setPADDRegion(`PADD${newState.padd}`);\n        },\n        children: states.map(state => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state.abbr,\n            children: [state.name, \" - PADD \", state.padd]\n          }, state.abbr, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"9000\",\n        max: \"16000\",\n        step: \"10\",\n        value: customerInputs.gasZTRPrice,\n        onChange: e => {\n          handleChange(e);\n        },\n        onMouseUp: e => {\n          setEditThis({\n            state: false,\n            daysMowedPerWeek: false,\n            numberNGBRUnits: false,\n            mowingHours: false,\n            lengthMowingSeason: false,\n            gasZTRPrice: false\n          });\n        },\n        name: \"gasZTRPrice\",\n        id: \"gasZTRPrice\",\n        list: \"gasZTRPrice-ticks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RangeTicks, {\n        handleClick: handleClick,\n        sliderID: \"daysMowedPerWeek\",\n        startTick: 9000,\n        endTick: 16000,\n        currentTick: customerInputs.daysMowedPerWeek,\n        skipTicks: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"coh-heading subtitle coh-style-h2---display\",\n        children: customerInputs.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), whichStep !== 8 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => setWhichStep(1),\n          className: \"go-button\",\n          children: \"GO TO STEP 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_c = State;\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"State\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/inputs/State.js"],"names":["statesJSON","ButtonEdit","RangeTicks","State","customerInputs","setPADDRegion","inStep","whichStep","setWhichStep","editThis","setEditThis","setCustomerInputs","states","JSON","parse","stringify","handleChange","e","gasZTRPrice","target","value","handleClick","handleEdit","daysMowedPerWeek","numberNGBRUnits","mowingHours","lengthMowingSeason","state","location","newState","find","abbr","padd","map","name"],"mappings":"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","sourcesContent":["import statesJSON from \"../../data/states.json\";\nimport ButtonEdit from \"../elements/ButtonEdit\";\nimport RangeTicks from \"../elements/RangeTicks\";\n\nconst State = ({\n  customerInputs,\n  //setCustomerInputs,\n  setPADDRegion,\n  inStep,\n  whichStep,\n  setWhichStep,\n  editThis,\n  setEditThis,\n  setCustomerInputs,\n}) => {\n  let states = JSON.parse(JSON.stringify(statesJSON));\n\n  const handleChange = (e) => {\n    setCustomerInputs({\n      ...customerInputs,\n      gasZTRPrice: e.target.value,\n    });\n  };\n\n  const handleClick = (e) => {\n    setCustomerInputs({\n      ...customerInputs,\n      gasZTRPrice: e.target.value,\n    });\n  };\n\n  const handleEdit = (e) => {\n    setEditThis({\n      gasZTRPrice: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: false,\n      state: !editThis.state,\n    });\n  };\n\n  return (\n    <>\n      <label id=\"location\">\n        {inStep ? \"Which state do you operate in?\" : \"State\"}\n        <ButtonEdit {...{ whichStep }} onClick={handleEdit} />\n      </label>\n      {inStep || editThis.state ? (\n        <span className=\"input\">\n          <select\n            htmlFor=\"location\"\n            value={customerInputs.location}\n            onChange={(e) => {\n              handleChange(e);\n              const newState = states.find(\n                (state) => state.abbr === e.target.value\n              );\n              setPADDRegion(`PADD${newState.padd}`);\n            }}\n          >\n            {states.map((state) => {\n              return (\n                <option key={state.abbr} value={state.abbr}>\n                  {state.name} - PADD {state.padd}\n                </option>\n              );\n            })}\n          </select>\n          <input\n            type=\"range\"\n            min=\"9000\"\n            max=\"16000\"\n            step=\"10\"\n            value={customerInputs.gasZTRPrice}\n            onChange={(e) => {\n              handleChange(e);\n            }}\n            onMouseUp={(e) => {\n              setEditThis({\n                state: false,\n                daysMowedPerWeek: false,\n                numberNGBRUnits: false,\n                mowingHours: false,\n                lengthMowingSeason: false,\n                gasZTRPrice: false,\n              });\n            }}\n            name=\"gasZTRPrice\"\n            id=\"gasZTRPrice\"\n            list=\"gasZTRPrice-ticks\"\n          />\n          <RangeTicks\n            handleClick={handleClick}\n            sliderID=\"daysMowedPerWeek\"\n            startTick={9000}\n            endTick={16000}\n            currentTick={customerInputs.daysMowedPerWeek}\n            skipTicks={true}\n          />\n        </span>\n      ) : (\n        <>\n          <span className=\"coh-heading subtitle coh-style-h2---display\">\n            {customerInputs.location}\n          </span>\n          {whichStep !== 8 && (\n            <>\n              <button onClick={(e) => setWhichStep(1)} className=\"go-button\">\n                GO TO STEP 1\n              </button>\n              <span className=\"circle\">1</span>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default State;\n"]},"metadata":{},"sourceType":"module"}