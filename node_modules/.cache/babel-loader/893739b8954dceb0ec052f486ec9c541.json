{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\"; //import InputForm from \"./inputs/Inputs\";\n//import Outputs from \"./outputs/Outputs\";\n\nimport Loading from \"./loading/Loading\";\nimport Step1 from \"./steps/Step1\";\nimport Step2 from \"./steps/Step2\"; //import MainOutput from \"./mainOutput\";\n\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  const [whichStep, setWhichStep] = useState(1);\n\n  const renderSteps = whichStep => {\n    switch (whichStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Step2, {\n          setPADDRegion,\n          customerInputs,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n    }\n  }; //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n\n\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice; // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  }); // -----------------> useEffects <-----------------\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n  // Get Fuel & Electric Prices\n\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false); // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [latestFuelWeeklyPrice, latestAvgPowerPrice, PADDRegion, customerInputs.location]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion PRE-CALCULATIONS\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true ? /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 27\n    }, this) : \"\", renderSteps(whichStep)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"/DUPpEDBZk3B50FPK9cr2HNBLmI=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Step1","Step2","PaasCalculator","whichStep","setWhichStep","renderSteps","setPADDRegion","customerInputs","setCustomerInputs","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","latestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","location","mowingHours","daysMowedPerWeek","lengthMowingSeason","Math","round","numberNGBRUnits","bateries","chargers","totalBateries","totalChargers","gasZTRPrice","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\n//import InputForm from \"./inputs/Inputs\";\n//import Outputs from \"./outputs/Outputs\";\nimport Loading from \"./loading/Loading\";\nimport Step1 from \"./steps/Step1\";\nimport Step2 from \"./steps/Step2\";\n\n//import MainOutput from \"./mainOutput\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  const [whichStep, setWhichStep] = useState(1);\n  const renderSteps = (whichStep) => {\n    switch (whichStep) {\n      case 1:\n        return <Step1 />;\n\n      case 2:\n        return (\n          <Step2 {...{ setPADDRegion, customerInputs, setCustomerInputs }} />\n        );\n\n      default:\n        return <Step1 />;\n    }\n  };\n\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false);\n    // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [\n    latestFuelWeeklyPrice,\n    latestAvgPowerPrice,\n    PADDRegion,\n    customerInputs.location,\n  ]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  return (\n    <>\n      {loading === true ? <Loading {...{ loading }} /> : \"\"}\n\n      {renderSteps(whichStep)}\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}