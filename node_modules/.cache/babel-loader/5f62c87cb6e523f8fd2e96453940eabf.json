{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  //#region PRE-CALCULATIONS\n  const [loading, setLoading] = useState(true);\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0);\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  });\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false\n  }); //#endregion PRE-CALCULATIONS\n  //#region useEffects\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(loc => {\n      const {\n        latitude,\n        longitude\n      } = loc.coords;\n      fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=country|locality&key=${process.env.REACT_APP_GEOCODING_API_KEY}`).then(response => response.json()).then(pos => {\n        pos.results[0].address_components.forEach(component => {\n          //console.log(component.short_name);\n          if (component.short_name === \"US\") {\n            console.log(\"US:\", pos.results[0].address_components[2].short_name);\n          }\n        }); // if (pos.results[0].address_components[6].short_name === \"US\") {\n        //   console.log(\"US\");\n        // } else {\n        //   console.log(\"not US\");\n        // }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }, () => {//fail\n    });\n  }, []);\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  useEffect(() => {\n    const resetInError = type => {\n      if (type === \"petroleum\") {\n        setLatestFuelWeeklyPrice(paasCal.latestFuelWeeklyPrice);\n      } else {\n        setLatestAvgPowerPrice(paasCal.latestAvgPowerPrice);\n      }\n    };\n\n    const fetchLatestPrices = async (url, type) => {\n      setLoading(true);\n      await fetch(url).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          resetInError(type);\n          throw new Error(\"Something went wrong\");\n        }\n      }).then(data => {\n        if (type === \"petroleum\") {\n          setLatestFuelWeeklyPrice(data.response.data[0].value);\n        } else {\n          setLatestAvgPowerPrice(data.response.data[0].price / 100);\n        }\n      }).catch(() => {\n        resetInError(type);\n      });\n    };\n\n    Promise.allSettled([fetchLatestPrices(`https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`, \"petroleum\"), fetchLatestPrices(`https://api.eia.gov/v2/electricity/retail-sales/data/?frequency=monthly&data[0]=price&facets[sectorid][]=RES&facets[stateid][]=${customerInputs.location}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`, \"electricity\")]).then(() => {\n      setLoading(false);\n    });\n  }, [customerInputs.location, duoarea]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion\n  // STEPS COMFIGURATION:\n\n  const [whichStep, setWhichStep] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true && /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      whichStep,\n      setWhichStep,\n      customerInputs,\n      setDuoarea,\n      setCustomerInputs,\n      pricing,\n      requiredEquipment,\n      totalMonthlyPaaSPowerCost,\n      totalMonthlyPaaSMaintenanceCost,\n      breakeven,\n      reductionFromNGBRResale,\n      gasZTR,\n      cashPurchase,\n      NGBRWithFlexiblePowerProgram,\n      numberOfMaintenanceJobsPerYear,\n      averageTotalTimeForServicing,\n      monthlyPaaSPowerCostNGBR,\n      monthlyFuelCostPerZTR,\n      monthlyMaintenanceCostPerNGBR,\n      monthlyMaintenanceCostPerZTR,\n      enviromentalBenefits,\n      poundsOfCO2Avoided,\n      editThis,\n      setEditThis,\n      latestAvgPowerPrice,\n      setLatestAvgPowerPrice,\n      latestFuelWeeklyPrice,\n      setLatestFuelWeeklyPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"dlwM0gfCAOjZUD7cS72RnBpS7jk=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Steps","PaasCalculator","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","duoarea","setDuoarea","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","editThis","setEditThis","state","gasZTRPrice","daysMowedPerWeek","numberNGBRUnits","mowingHours","lengthMowingSeason","window","navigator","geolocation","getCurrentPosition","loc","latitude","longitude","coords","fetch","process","env","REACT_APP_GEOCODING_API_KEY","then","response","json","pos","results","address_components","forEach","component","short_name","console","log","catch","error","latestFuelWeeklyPrice","setLatestFuelWeeklyPrice","latestAvgPowerPrice","setLatestAvgPowerPrice","resetInError","type","fetchLatestPrices","url","ok","Error","data","value","price","Promise","allSettled","REACT_APP_EIA_KEY","location","Math","round","bateries","chargers","totalBateries","totalChargers","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","whichStep","setWhichStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region PRE-CALCULATIONS\n  const [loading, setLoading] = useState(true);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false,\n  });\n  //#endregion PRE-CALCULATIONS\n\n  //#region useEffects\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      (loc) => {\n        const { latitude, longitude } = loc.coords;\n        fetch(\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&result_type=country|locality&key=${process.env.REACT_APP_GEOCODING_API_KEY}`\n        )\n          .then((response) => response.json())\n          .then((pos) => {\n\n            pos.results[0].address_components.forEach((component) => {\n              //console.log(component.short_name);\n              if (component.short_name === \"US\") {\n                console.log(\n                  \"US:\",\n                  pos.results[0].address_components[2].short_name\n                );\n              }\n            });\n\n            // if (pos.results[0].address_components[6].short_name === \"US\") {\n            //   console.log(\"US\");\n            // } else {\n            //   console.log(\"not US\");\n            // }\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      },\n      () => {\n        //fail\n      }\n    );\n  }, []);\n\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(\n    paasCal.latestFuelWeeklyPrice\n  );\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(\n    paasCal.latestAvgPowerPrice\n  );\n\n  useEffect(() => {\n    const resetInError = (type) => {\n      if (type === \"petroleum\") {\n        setLatestFuelWeeklyPrice(paasCal.latestFuelWeeklyPrice);\n      } else {\n        setLatestAvgPowerPrice(paasCal.latestAvgPowerPrice);\n      }\n    };\n\n    const fetchLatestPrices = async (url, type) => {\n      setLoading(true);\n      await fetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            resetInError(type);\n            throw new Error(\"Something went wrong\");\n          }\n        })\n        .then((data) => {\n          if (type === \"petroleum\") {\n            setLatestFuelWeeklyPrice(data.response.data[0].value);\n          } else {\n            setLatestAvgPowerPrice(data.response.data[0].price / 100);\n          }\n        })\n        .catch(() => {\n          resetInError(type);\n        });\n    };\n\n    Promise.allSettled([\n      fetchLatestPrices(\n        `https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`,\n        \"petroleum\"\n      ),\n\n      fetchLatestPrices(\n        `https://api.eia.gov/v2/electricity/retail-sales/data/?frequency=monthly&data[0]=price&facets[sectorid][]=RES&facets[stateid][]=${customerInputs.location}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`,\n        \"electricity\"\n      ),\n    ]).then(() => {\n      setLoading(false);\n    });\n  }, [customerInputs.location, duoarea]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion\n\n  // STEPS COMFIGURATION:\n  const [whichStep, setWhichStep] = useState(1);\n\n  return (\n    <>\n      {loading === true && <Loading {...{ loading }} />}\n      <Steps\n        {...{\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          setDuoarea,\n          setCustomerInputs,\n          pricing,\n          requiredEquipment,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n          editThis,\n          setEditThis,\n          latestAvgPowerPrice,\n          setLatestAvgPowerPrice,\n          latestFuelWeeklyPrice,\n          setLatestFuelWeeklyPrice,\n        }}\n      />\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}