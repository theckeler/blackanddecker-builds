{"ast":null,"code":"import _defineProperty from\"/Users/toddheckeler/websites/paas-calculator/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/toddheckeler/websites/paas-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/toddheckeler/websites/paas-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import paasCal from\"../data/paas-cal.json\";import PMT from\"../utils/pmt\";import Loading from\"./loading/Loading\";import Steps from\"./steps/Steps\";import\"../scss/paas-calculator.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaasCalculator=function PaasCalculator(){//#region PRE-CALCULATIONS\n// -----------------> SETUP <-----------------\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];//const [checkObserve, setCheckObserve] = useState(false);\nvar averageWeeksPerMonth=Number(paasCal.averageWeeksPerMonth/12).toFixed(4);var _useState3=useState(paasCal.mowingMonthly),_useState4=_slicedToArray(_useState3,2),mowingMonthly=_useState4[0],setMowingMonthly=_useState4[1];var _useState5=useState(paasCal.lengthOffSeason),_useState6=_slicedToArray(_useState5,2),lengthOffSeason=_useState6[0],setLengthOffSeason=_useState6[1];var _useState7=useState(_objectSpread({},paasCal.customerInputs)),_useState8=_slicedToArray(_useState7,2),customerInputs=_useState8[0],setCustomerInputs=_useState8[1];var _useState9=useState(_objectSpread({},paasCal.equipment.deault)),_useState10=_slicedToArray(_useState9,2),requiredEquipment=_useState10[0],setRequiredEquipment=_useState10[1];var powerProgramCosts=_objectSpread({},paasCal.equipment.pricing);var NGBRBatteryCapacity=paasCal.NGBRBatteryCapacity;var averageHourlyMaintenanceCost=paasCal.averageHourlyMaintenanceCost;var fuelConsumptionRate=paasCal.fuelConsumptionRate;var electricMaintenanceCostGas=paasCal.electricMaintenanceCostGas;var _useState11=useState(paasCal.PADDRegion),_useState12=_slicedToArray(_useState11,2),PADDRegion=_useState12[0],setPADDRegion=_useState12[1];var _useState13=useState(_objectSpread({},paasCal.pricing)),_useState14=_slicedToArray(_useState13,2),pricing=_useState14[0],setPricing=_useState14[1];var _useState15=useState(paasCal.monthlyPaaSPowerCostNGBR),_useState16=_slicedToArray(_useState15,2),monthlyPaaSPowerCostNGBR=_useState16[0],setMonthlyPaaSPowerCostNGBR=_useState16[1];var _useState17=useState(paasCal.monthlyPaaSPowerCostNGBR),_useState18=_slicedToArray(_useState17,2),totalMonthlyPaaSPowerCost=_useState18[0],setTotalMonthlyPaaSPowerCost=_useState18[1];var _useState19=useState(0),_useState20=_slicedToArray(_useState19,2),monthlyMaintenanceCostPerZTR=_useState20[0],setMonthlyMaintenanceCostPerZTR=_useState20[1];var _useState21=useState(0),_useState22=_slicedToArray(_useState21,2),monthlyFuelCostPerZTR=_useState22[0],setMonthlyFuelCostPerZTR=_useState22[1];var _useState23=useState(0),_useState24=_slicedToArray(_useState23,2),monthlyMaintenanceCostPerNGBR=_useState24[0],setMonthlyMaintenanceCostPerNGBR=_useState24[1];// --------------------------------------------------------\n// UNCOMMENT TO TURN ON API:\n// const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n// const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n// COMMENT TO TURN ON API:\nvar latestFuelWeeklyPrice=paasCal.latestFuelWeeklyPrice;var latestAvgPowerPrice=paasCal.latestAvgPowerPrice;// --------------------------------------------------------\nvar _useState25=useState(0),_useState26=_slicedToArray(_useState25,2),totalMonthlyZTRFuelCost=_useState26[0],setTotalMonthlyZTRFuelCost=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),totalMonthlyZTRMaintenanceCost=_useState28[0],setTotalMonthlyZTRMaintenanceCost=_useState28[1];var depreciationInputs=_objectSpread({},paasCal.depreciationInputs);var totalHoursMowedTCOAnalysis=3000;var _useState29=useState(1.978),_useState30=_slicedToArray(_useState29,2),lengthMowingOperationsTCO=_useState30[0],setLengthMowingOperationsTCO=_useState30[1];// const paaSPremiumOverFourYearFinancing =\n//   paasCal.paaSPremiumOverFourYearFinancing;\nvar _useState31=useState(0),_useState32=_slicedToArray(_useState31,2),totalMonthlyPaaSMaintenanceCost=_useState32[0],setTotalMonthlyPaaSMaintenanceCost=_useState32[1];var _useState33=useState(0),_useState34=_slicedToArray(_useState33,2),NGBROpEx=_useState34[0],setNGBROpEx=_useState34[1];var _useState35=useState(0),_useState36=_slicedToArray(_useState35,2),gasZTROpEx=_useState36[0],setGasZTROpEx=_useState36[1];var _useState37=useState(0),_useState38=_slicedToArray(_useState37,2),totalGasZTRPurchasePrice=_useState38[0],setTotalGasZTRPurchasePrice=_useState38[1];var BareNGBR=paasCal.BareNGBR;var _useState39=useState(0),_useState40=_slicedToArray(_useState39,2),totalNGBRCostBare=_useState40[0],setTotalNGBRCostBare=_useState40[1];var _useState41=useState(0),_useState42=_slicedToArray(_useState41,2),costofChargers=_useState42[0],setCostofChargers=_useState42[1];var _useState43=useState(0),_useState44=_slicedToArray(_useState43,2),costofBateries=_useState44[0],setCostofBateries=_useState44[1];var _useState45=useState(0),_useState46=_slicedToArray(_useState45,2),totalNGBRCostWith=_useState46[0],setTotalNGBRCostWith=_useState46[1];var _useState47=useState(0),_useState48=_slicedToArray(_useState47,2),savingsWith4yearFinancing=_useState48[0],setSavingsWith4yearFinancing=_useState48[1];var _useState49=useState(0),_useState50=_slicedToArray(_useState49,2),savingsWith3yearFinancing=_useState50[0],setSavingsWith3yearFinancing=_useState50[1];var _useState51=useState(0),_useState52=_slicedToArray(_useState51,2),savingsWithFPP=_useState52[0],setSavingsWithFPP=_useState52[1];var _useState53=useState(0),_useState54=_slicedToArray(_useState53,2),savingsWithNGBRCashPurchase=_useState54[0],setSavingsWithNGBRCashPurchase=_useState54[1];var _useState55=useState({breakeven4yearFinancingNoResale:0,breakeven3yearFinancingNoResale:0,breakevenFPPNoResale:0,breakevenOutrightPurchaseNoResale:0}),_useState56=_slicedToArray(_useState55,2),breakeven=_useState56[0],setBreakeven=_useState56[1];var _useState57=useState(0),_useState58=_slicedToArray(_useState57,2),NGBRResalePriceBareNGBR=_useState58[0],setNGBRResalePriceBareNGBR=_useState58[1];var _useState59=useState(0),_useState60=_slicedToArray(_useState59,2),NGBRResalePriceNGBR=_useState60[0],setNGBRResalePriceNGBR=_useState60[1];var _useState61=useState(0),_useState62=_slicedToArray(_useState61,2),gasZTRResalePrice=_useState62[0],setGasZTRResalePrice=_useState62[1];var _useState63=useState(0),_useState64=_slicedToArray(_useState63,2),eZTRResalePremiumBareNGBR=_useState64[0],setEZTRResalePremiumBareNGBR=_useState64[1];var _useState65=useState(0),_useState66=_slicedToArray(_useState65,2),eZTRResalePremiumCashPurchase=_useState66[0],setEZTRResalePremiumCashPurchase=_useState66[1];var _useState67=useState({TCOofGasZTR:0,depreciationofGasZTR:0,fuel:0,maintenance:0}),_useState68=_slicedToArray(_useState67,2),gasZTR=_useState68[0],setGasZTR=_useState68[1];var _useState69=useState({TCOofNGBR:0,depreciationofGasZTR:0,power:0,maintenance:0}),_useState70=_slicedToArray(_useState69,2),cashPurchase=_useState70[0],setCashPurchase=_useState70[1];var _useState71=useState({depreciationOfBareNGBR:0,flexiblePowerProgramSubscription:0,financingFee36:0,financingFee48:0}),_useState72=_slicedToArray(_useState71,2),NGBRWithFlexiblePowerProgram=_useState72[0],setNGBRWithFlexiblePowerProgram=_useState72[1];var enviromentalBenefits=_objectSpread({},paasCal.enviromentalBenefits);var _useState73=useState(paasCal.gallonsOfFuelConsumedOverPerYear),_useState74=_slicedToArray(_useState73,2),gallonsOfFuelConsumedOverPerYear=_useState74[0],setGallonsOfFuelConsumedOverPerYear=_useState74[1];var _useState75=useState(paasCal.poundsOfCO2Avoided),_useState76=_slicedToArray(_useState75,2),poundsOfCO2Avoided=_useState76[0],setPoundsOfCO2Avoided=_useState76[1];var averageFrequencyPerZTRServicing=paasCal.averageFrequencyPerZTRServicing;var averageCommuteToFromServicingDealer=paasCal.averageCommuteToFromServicingDealer;var averageTimeForServicing=paasCal.averageTimeForServicing;var averageTotalTimeForServicing=averageTimeForServicing+averageCommuteToFromServicingDealer;var _useState77=useState(paasCal.numberOfMaintenanceJobsPerYear),_useState78=_slicedToArray(_useState77,2),numberOfMaintenanceJobsPerYear=_useState78[0],setNumberOfMaintenanceJobsPerYear=_useState78[1];var _useState79=useState(_objectSpread({},paasCal.reductionFromNGBRResale)),_useState80=_slicedToArray(_useState79,2),reductionFromNGBRResale=_useState80[0],setReductionFromNGBRResale=_useState80[1];// -----------------> useEffects <-----------------\n// OBSERVER:\n// useEffect(() => {\n//   const observer = new IntersectionObserver(\n//     ([entry]) => {\n//       if (entry.isIntersecting) {\n//         setCheckObserve(true);\n//         //console.log(\"in view\");\n//       } else {\n//         setCheckObserve(false);\n//         document.querySelectorAll(\".tip\").forEach((tip) => {\n//           tip.classList.remove(\"active\");\n//         });\n//       }\n//     },\n//     {\n//       root: null,\n//       //threshold: 0.7,\n//     }\n//   );\n//   observer.observe(document.querySelector(\"#inputs\"));\n// }, [checkObserve]);\n// Get Fuel & Electric Prices\nuseEffect(function(){/// REMOVE setLoading\nsetLoading(false);// UNCOMMENT:\n// const padds = {\n//   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n//   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n//   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n//   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n//   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n// };\n// const eiaKey = process.env.REACT_APP_EIA_KEY;\n// const fetchData = async (updateWhat, url) => {\n//   await fetch(url)\n//     .then((response) => response.json())\n//     .then((data) => {\n//       updateWhat === \"fuel\"\n//         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n//         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n//       setLoading(false);\n//     })\n//     .catch((error) => {\n//       setLoading(false);\n//       console.error(\"There has been an error:\", error);\n//     });\n// };\n// fetchData(\n//   \"fuel\",\n//   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n// );\n// fetchData(\n//   \"power\",\n//   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n// );\n},[latestFuelWeeklyPrice,latestAvgPowerPrice,PADDRegion,customerInputs.location]);useEffect(function(){setMowingMonthly((customerInputs.mowingHours*customerInputs.daysMowedPerWeek*averageWeeksPerMonth).toFixed(4));},[averageWeeksPerMonth,customerInputs.daysMowedPerWeek,customerInputs.mowingHours]);useEffect(function(){setLengthOffSeason(12-customerInputs.lengthMowingSeason);},[customerInputs.lengthMowingSeason]);useEffect(function(){setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice*NGBRBatteryCapacity*mowingMonthly));},[NGBRBatteryCapacity,latestAvgPowerPrice,mowingMonthly]);useEffect(function(){setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR*customerInputs.numberNGBRUnits);},[customerInputs.numberNGBRUnits,monthlyPaaSPowerCostNGBR]);useEffect(function(){setRequiredEquipment({bateries:paasCal.equipment.deault.bateries,chargers:paasCal.equipment.deault.chargers,totalBateries:paasCal.equipment.deault.bateries*customerInputs.numberNGBRUnits,totalChargers:paasCal.equipment.deault.chargers*customerInputs.numberNGBRUnits});},[customerInputs.numberNGBRUnits]);useEffect(function(){setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost*mowingMonthly));},[averageHourlyMaintenanceCost,mowingMonthly]);useEffect(function(){setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice*fuelConsumptionRate*mowingMonthly));},[fuelConsumptionRate,latestFuelWeeklyPrice,mowingMonthly]);useEffect(function(){setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR*electricMaintenanceCostGas));},[electricMaintenanceCostGas,monthlyMaintenanceCostPerZTR]);useEffect(function(){setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR*customerInputs.numberNGBRUnits);},[customerInputs.numberNGBRUnits,monthlyMaintenanceCostPerNGBR]);useEffect(function(){setNGBROpEx(totalMonthlyPaaSPowerCost+totalMonthlyPaaSMaintenanceCost);},[totalMonthlyPaaSMaintenanceCost,totalMonthlyPaaSPowerCost]);useEffect(function(){setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR*customerInputs.numberNGBRUnits);},[customerInputs.numberNGBRUnits,monthlyFuelCostPerZTR]);useEffect(function(){setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR*customerInputs.numberNGBRUnits);},[customerInputs.numberNGBRUnits,monthlyMaintenanceCostPerZTR]);useEffect(function(){setGasZTROpEx(totalMonthlyZTRFuelCost+totalMonthlyZTRMaintenanceCost);},[totalMonthlyZTRFuelCost,totalMonthlyZTRMaintenanceCost]);useEffect(function(){setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice*customerInputs.numberNGBRUnits);},[customerInputs.gasZTRPrice,customerInputs.numberNGBRUnits]);useEffect(function(){setTotalNGBRCostBare(BareNGBR*customerInputs.numberNGBRUnits);},[BareNGBR,customerInputs.numberNGBRUnits]);useEffect(function(){setCostofChargers(powerProgramCosts.charger*requiredEquipment.totalChargers);},[powerProgramCosts.charger,requiredEquipment.totalChargers]);useEffect(function(){setCostofBateries(powerProgramCosts.battery*requiredEquipment.totalBateries);},[powerProgramCosts.battery,requiredEquipment.totalBateries]);useEffect(function(){setTotalNGBRCostWith(costofBateries+costofChargers+totalNGBRCostBare);},[costofBateries,costofChargers,totalNGBRCostBare]);useEffect(function(){setSavingsWith4yearFinancing(gasZTROpEx-(NGBROpEx+pricing.priceMo48));},[NGBROpEx,gasZTROpEx,pricing.priceMo48]);useEffect(function(){setSavingsWith3yearFinancing(gasZTROpEx-(NGBROpEx+pricing.priceMo36));},[NGBROpEx,gasZTROpEx,pricing.priceMo36]);useEffect(function(){setSavingsWithFPP(gasZTROpEx-(NGBROpEx+pricing.targetPaasMonthlyPrice));},[NGBROpEx,gasZTROpEx,pricing.targetPaasMonthlyPrice]);useEffect(function(){setSavingsWithNGBRCashPurchase(gasZTROpEx-NGBROpEx);},[NGBROpEx,gasZTROpEx]);useEffect(function(){setBreakeven({breakevenOutrightPurchaseNoResale:((totalNGBRCostWith-totalGasZTRPurchasePrice)/savingsWithNGBRCashPurchase).toFixed(4),breakevenFPPNoResale:((totalNGBRCostBare-totalGasZTRPurchasePrice)/savingsWithFPP).toFixed(4),breakeven3yearFinancingNoResale:((totalNGBRCostBare-totalGasZTRPurchasePrice)/savingsWith3yearFinancing).toFixed(4),breakeven4yearFinancingNoResale:((totalNGBRCostBare-totalGasZTRPurchasePrice)/savingsWith4yearFinancing).toFixed(4)});},[savingsWith3yearFinancing,savingsWith4yearFinancing,savingsWithFPP,savingsWithNGBRCashPurchase,totalGasZTRPurchasePrice,totalNGBRCostBare,totalNGBRCostWith]);useEffect(function(){setNGBRResalePriceBareNGBR((totalNGBRCostBare*(1-depreciationInputs.electricZTRDepreciationRate)).toFixed(4));},[depreciationInputs.electricZTRDepreciationRate,totalNGBRCostBare]);useEffect(function(){setNGBRResalePriceNGBR((totalNGBRCostWith*(1-depreciationInputs.electricZTRDepreciationRate)).toFixed(4));},[depreciationInputs.electricZTRDepreciationRate,totalNGBRCostWith]);useEffect(function(){setGasZTRResalePrice((totalGasZTRPurchasePrice*(1-depreciationInputs.gasZTRDepreciationRate)).toFixed(4));},[depreciationInputs.gasZTRDepreciationRate,totalGasZTRPurchasePrice]);useEffect(function(){setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR-gasZTRResalePrice);},[NGBRResalePriceBareNGBR,gasZTRResalePrice]);useEffect(function(){setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR-eZTRResalePremiumBareNGBR);},[NGBRResalePriceNGBR,eZTRResalePremiumBareNGBR]);useEffect(function(){setGasZTR({TCOofGasZTR:gasZTR.depreciationofGasZTR+gasZTR.fuel+gasZTR.maintenance,depreciationofGasZTR:customerInputs.gasZTRPrice*depreciationInputs.gasZTRDepreciationRate*customerInputs.numberNGBRUnits,fuel:totalMonthlyZTRFuelCost*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO,maintenance:totalMonthlyZTRMaintenanceCost*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO});},[customerInputs.gasZTRPrice,customerInputs.lengthMowingSeason,customerInputs.numberNGBRUnits,depreciationInputs.gasZTRDepreciationRate,gasZTR.depreciationofGasZTR,gasZTR.fuel,gasZTR.maintenance,lengthMowingOperationsTCO,totalMonthlyZTRFuelCost,totalMonthlyZTRMaintenanceCost]);useEffect(function(){setCashPurchase({TCOofNGBR:cashPurchase.depreciationofGasZTR+cashPurchase.power+cashPurchase.maintenance,depreciationofGasZTR:totalNGBRCostWith*depreciationInputs.electricZTRDepreciationRate,power:totalMonthlyPaaSPowerCost*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO,maintenance:totalMonthlyPaaSMaintenanceCost*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO});},[cashPurchase.depreciationofGasZTR,cashPurchase.maintenance,cashPurchase.power,customerInputs.lengthMowingSeason,depreciationInputs.electricZTRDepreciationRate,lengthMowingOperationsTCO,totalMonthlyPaaSMaintenanceCost,totalMonthlyPaaSPowerCost,totalNGBRCostWith]);useEffect(function(){setNGBRWithFlexiblePowerProgram({depreciationOfBareNGBR:totalNGBRCostBare*depreciationInputs.electricZTRDepreciationRate,flexiblePowerProgramSubscription:pricing.targetPaasMonthlyPrice*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO,financingFee36:pricing.priceMo36*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO,financingFee48:pricing.priceMo48*customerInputs.lengthMowingSeason*lengthMowingOperationsTCO});},[customerInputs.lengthMowingSeason,depreciationInputs.electricZTRDepreciationRate,lengthMowingOperationsTCO,pricing.priceMo36,pricing.priceMo48,pricing.targetPaasMonthlyPrice,totalNGBRCostBare]);useEffect(function(){setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate*mowingMonthly*customerInputs.lengthMowingSeason*customerInputs.numberNGBRUnits);},[customerInputs.lengthMowingSeason,customerInputs.numberNGBRUnits,fuelConsumptionRate,mowingMonthly]);useEffect(function(){setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear*enviromentalBenefits.convertingGallonsOfGasolineToCO2);},[enviromentalBenefits.convertingGallonsOfGasolineToCO2,gallonsOfFuelConsumedOverPerYear]);useEffect(function(){setNumberOfMaintenanceJobsPerYear((mowingMonthly*customerInputs.lengthMowingSeason*customerInputs.numberNGBRUnits/averageFrequencyPerZTRServicing).toFixed(4));},[averageFrequencyPerZTRServicing,customerInputs.lengthMowingSeason,customerInputs.numberNGBRUnits,mowingMonthly]);useEffect(function(){setReductionFromNGBRResale({cashPurchase:Math.round(eZTRResalePremiumCashPurchase/savingsWithNGBRCashPurchase),FPP:Math.round(eZTRResalePremiumBareNGBR/savingsWithFPP),financing36:Math.round(eZTRResalePremiumBareNGBR/savingsWith3yearFinancing),financing48:Math.round(eZTRResalePremiumBareNGBR/savingsWith4yearFinancing)});},[eZTRResalePremiumBareNGBR,eZTRResalePremiumCashPurchase,savingsWith3yearFinancing,savingsWith4yearFinancing,savingsWithFPP,savingsWithNGBRCashPurchase]);useEffect(function(){setRequiredEquipment({bateries:paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,chargers:paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,totalBateries:paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries*customerInputs.numberNGBRUnits,totalChargers:paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers*customerInputs.numberNGBRUnits});},[customerInputs.mowingHours,customerInputs.numberNGBRUnits]);useEffect(function(){var financing;paasCal.financingOptions.forEach(function(financingOption){financing=_objectSpread(_objectSpread({},financing),{},_defineProperty({},\"priceMo\".concat(financingOption.presentValue),Math.round(PMT(financingOption.interestRate/financingOption.totalNumberPayments,financingOption.presentValue,-pricing.totalCashPrice))));});setPricing(_objectSpread({totalCashPrice:requiredEquipment.totalBateries*powerProgramCosts.battery+requiredEquipment.totalChargers*powerProgramCosts.charger,targetPaasMonthlyPrice:Math.round(pricing.priceMo48+(pricing.priceMo48*0.1+1)),annualizedPaaSPrice:Math.round(pricing.targetPaasMonthlyPrice*12),annualRebateOffSeason:lengthOffSeason*pricing.targetPaasMonthlyPrice},financing));},[requiredEquipment,powerProgramCosts.battery,powerProgramCosts.charger,pricing.totalCashPrice,pricing.priceMo48,pricing.targetPaasMonthlyPrice,lengthOffSeason]);useEffect(function(){setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis/(mowingMonthly*customerInputs.lengthMowingSeason)).toFixed(4));},[customerInputs.lengthMowingSeason,mowingMonthly]);//#endregion PRE-CALCULATIONS\n// STEPS COMFIGURATION:\nvar _useState81=useState(8),_useState82=_slicedToArray(_useState81,2),whichStep=_useState82[0],setWhichStep=_useState82[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[loading===true&&/*#__PURE__*/_jsx(Loading,{loading:loading}),/*#__PURE__*/_jsx(Steps,{whichStep:whichStep,setWhichStep:setWhichStep,customerInputs:customerInputs,setPADDRegion:setPADDRegion,setCustomerInputs:setCustomerInputs,pricing:pricing,requiredEquipment:requiredEquipment,totalMonthlyPaaSPowerCost:totalMonthlyPaaSPowerCost,totalMonthlyPaaSMaintenanceCost:totalMonthlyPaaSMaintenanceCost,breakeven:breakeven,reductionFromNGBRResale:reductionFromNGBRResale,gasZTR:gasZTR,cashPurchase:cashPurchase,NGBRWithFlexiblePowerProgram:NGBRWithFlexiblePowerProgram,numberOfMaintenanceJobsPerYear:numberOfMaintenanceJobsPerYear,averageTotalTimeForServicing:averageTotalTimeForServicing,monthlyPaaSPowerCostNGBR:monthlyPaaSPowerCostNGBR,monthlyFuelCostPerZTR:monthlyFuelCostPerZTR,monthlyMaintenanceCostPerNGBR:monthlyMaintenanceCostPerNGBR,monthlyMaintenanceCostPerZTR:monthlyMaintenanceCostPerZTR,enviromentalBenefits:enviromentalBenefits,poundsOfCO2Avoided:poundsOfCO2Avoided})]});};export default PaasCalculator;","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Steps","PaasCalculator","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","equipment","deault","requiredEquipment","setRequiredEquipment","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPADDRegion","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","latestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","breakeven","setBreakeven","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","gasZTR","setGasZTR","TCOofNGBR","power","cashPurchase","setCashPurchase","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","location","mowingHours","daysMowedPerWeek","lengthMowingSeason","Math","round","numberNGBRUnits","bateries","chargers","totalBateries","totalChargers","gasZTRPrice","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","whichStep","setWhichStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false);\n    // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [\n    latestFuelWeeklyPrice,\n    latestAvgPowerPrice,\n    PADDRegion,\n    customerInputs.location,\n  ]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  // STEPS COMFIGURATION:\n  const [whichStep, setWhichStep] = useState(8);\n\n  return (\n    <>\n      {loading === true && <Loading {...{ loading }} />}\n      <Steps\n        {...{\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          setPADDRegion,\n          setCustomerInputs,\n          pricing,\n          requiredEquipment,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n        }}\n      />\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}