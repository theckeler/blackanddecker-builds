{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice); // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  });\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false\n  }); // -----------------> useEffects <-----------------\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n  // Get Fuel & Electric Prices\n  // useEffect(() => {\n  //   /// REMOVE setLoading\n  //   setLoading(false);\n  //   // UNCOMMENT:\n  //   const padds = {\n  //     PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n  //     PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n  //     PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n  //     PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n  //     PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n  //   };\n  //   const eiaKey = process.env.REACT_APP_EIA_KEY;\n  //   const fetchData = async (updateWhat, url) => {\n  //     await fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(\"setLatestFuelWeeklyPrice\", data.series[0].data[0][1]);\n  //         console.log(\n  //           \"setLatestAvgPowerPrice\",\n  //           data.series[0].data[0][1] / 100\n  //         );\n  //         updateWhat === \"fuel\"\n  //           ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n  //           : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n  //         setLoading(false);\n  //       })\n  //       .catch((error) => {\n  //         setLoading(false);\n  //         console.error(\"There has been an error:\", error);\n  //       });\n  //   };\n  //   fetchData(\n  //     \"fuel\",\n  //     `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n  //   );\n  //   fetchData(\n  //     \"power\",\n  //     `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n  //   );\n  // }, [\n  //   latestFuelWeeklyPrice,\n  //   latestAvgPowerPrice,\n  //   PADDRegion,\n  //   customerInputs.location,\n  // ]);\n\n  useEffect(() => {\n    // Get Fuel & Electric Prices Key {\n    //   frequency: \"weekly\",\n    //   data: [\"value\"],\n    //   facets: {\n    //     product: [\"EPMRU\"],\n    //     duoarea: [\"R30\"],\n    //   },\n    //   sort: [\n    //     {\n    //       column: \"period\",\n    //       direction: \"desc\",\n    //     },\n    //   ],\n    //   offset: 0,\n    //   length: 1,\n    //   api_key: eiaKey,\n    // };\n    console.log(\"duoarea\", duoarea);\n    fetch(`https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${eiaKey}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error(\"Something went wrong\");\n    }).then(data => {\n      console.log(\"Success:\", data.response.data[0].value);\n      setLatestFuelWeeklyPrice(data.response.data[0].value);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }, [latestFuelWeeklyPrice, duoarea, customerInputs.location]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion PRE-CALCULATIONS\n  // STEPS COMFIGURATION:\n\n  const [whichStep, setWhichStep] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true && /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      whichStep,\n      setWhichStep,\n      customerInputs,\n      setPADDRegion,\n      setCustomerInputs,\n      pricing,\n      requiredEquipment,\n      totalMonthlyPaaSPowerCost,\n      totalMonthlyPaaSMaintenanceCost,\n      breakeven,\n      reductionFromNGBRResale,\n      gasZTR,\n      cashPurchase,\n      NGBRWithFlexiblePowerProgram,\n      numberOfMaintenanceJobsPerYear,\n      averageTotalTimeForServicing,\n      monthlyPaaSPowerCostNGBR,\n      monthlyFuelCostPerZTR,\n      monthlyMaintenanceCostPerNGBR,\n      monthlyMaintenanceCostPerZTR,\n      enviromentalBenefits,\n      poundsOfCO2Avoided,\n      editThis,\n      setEditThis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"zglekTFlKKhRZIdLYqlxRMQNNl4=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Steps","PaasCalculator","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPADDRegion","duoarea","setDuoarea","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","setLatestFuelWeeklyPrice","latestAvgPowerPrice","setLatestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","editThis","setEditThis","state","gasZTRPrice","daysMowedPerWeek","numberNGBRUnits","mowingHours","lengthMowingSeason","console","log","fetch","eiaKey","then","response","ok","json","Error","data","value","catch","error","location","Math","round","bateries","chargers","totalBateries","totalChargers","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","whichStep","setWhichStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(\n    paasCal.latestFuelWeeklyPrice\n  );\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(\n    paasCal.latestAvgPowerPrice\n  );\n  // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  // useEffect(() => {\n  //   /// REMOVE setLoading\n  //   setLoading(false);\n  //   // UNCOMMENT:\n  //   const padds = {\n  //     PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n  //     PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n  //     PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n  //     PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n  //     PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n  //   };\n  //   const eiaKey = process.env.REACT_APP_EIA_KEY;\n  //   const fetchData = async (updateWhat, url) => {\n  //     await fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         console.log(\"setLatestFuelWeeklyPrice\", data.series[0].data[0][1]);\n  //         console.log(\n  //           \"setLatestAvgPowerPrice\",\n  //           data.series[0].data[0][1] / 100\n  //         );\n  //         updateWhat === \"fuel\"\n  //           ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n  //           : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n  //         setLoading(false);\n  //       })\n  //       .catch((error) => {\n  //         setLoading(false);\n  //         console.error(\"There has been an error:\", error);\n  //       });\n  //   };\n  //   fetchData(\n  //     \"fuel\",\n  //     `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n  //   );\n  //   fetchData(\n  //     \"power\",\n  //     `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n  //   );\n  // }, [\n  //   latestFuelWeeklyPrice,\n  //   latestAvgPowerPrice,\n  //   PADDRegion,\n  //   customerInputs.location,\n  // ]);\n\n  useEffect(() => {\n    // Get Fuel & Electric Prices Key {\n    //   frequency: \"weekly\",\n    //   data: [\"value\"],\n    //   facets: {\n    //     product: [\"EPMRU\"],\n    //     duoarea: [\"R30\"],\n    //   },\n    //   sort: [\n    //     {\n    //       column: \"period\",\n    //       direction: \"desc\",\n    //     },\n    //   ],\n    //   offset: 0,\n    //   length: 1,\n    //   api_key: eiaKey,\n    // };\n\n    console.log(\"duoarea\", duoarea);\n\n    fetch(\n      `https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${eiaKey}`\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error(\"Something went wrong\");\n      })\n      .then((data) => {\n        console.log(\"Success:\", data.response.data[0].value);\n        setLatestFuelWeeklyPrice(data.response.data[0].value);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }, [latestFuelWeeklyPrice, duoarea, customerInputs.location]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  // STEPS COMFIGURATION:\n  const [whichStep, setWhichStep] = useState(1);\n\n  return (\n    <>\n      {loading === true && <Loading {...{ loading }} />}\n      <Steps\n        {...{\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          setPADDRegion,\n          setCustomerInputs,\n          pricing,\n          requiredEquipment,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n          editThis,\n          setEditThis,\n        }}\n      />\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}