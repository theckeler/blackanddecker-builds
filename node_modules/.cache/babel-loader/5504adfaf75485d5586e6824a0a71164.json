{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Step1 from \"./steps/Step1\";\nimport Step2 from \"./steps/Step2\";\nimport Step3 from \"./steps/Step3\";\nimport Step4 from \"./steps/Step4\";\nimport Step5 from \"./steps/Step5\";\nimport Step6 from \"./steps/Step6\";\nimport Step7 from \"./steps/Step7\";\nimport Step8 from \"./steps/Step8\";\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  //#region STEPS\n  const renderSteps = whichStep => {\n    switch (whichStep) {\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Step2, {\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          handleChange,\n          setPADDRegion,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Step3, {\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          handleChange,\n          handleClick,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Step4, {\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          handleChange,\n          handleClick,\n          setPADDRegion,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(Step5, {\n          whichStep,\n          setWhichStep,\n          handleChange,\n          buttonClick,\n          setCustomerInputs,\n          setPADDRegion,\n          customerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this);\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(Step6, {\n          whichStep,\n          setWhichStep,\n          handleChange,\n          handleClick,\n          customerInputs,\n          setPADDRegion,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n\n      case 7:\n        return /*#__PURE__*/_jsxDEV(Step7, {\n          whichStep,\n          setWhichStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this);\n\n      case 8:\n        return /*#__PURE__*/_jsxDEV(Step8, {\n          pricing,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          requiredEquipment,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          customerInputs,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n          whichStep,\n          setPADDRegion,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Step1, {\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          handleChange,\n          setPADDRegion,\n          setCustomerInputs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this);\n    }\n  }; //#endregion\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n\n\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice; // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  }); // -----------------> useEffects <-----------------\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n  // Get Fuel & Electric Prices\n\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false); // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [latestFuelWeeklyPrice, latestAvgPowerPrice, PADDRegion, customerInputs.location]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion PRE-CALCULATIONS\n  //#region FUCNTIONS\n\n  const handleChange = e => {\n    let inputValue;\n\n    if (isNaN(e.target.value)) {\n      inputValue = e.target.value;\n    } else {\n      inputValue = Number(e.target.value);\n    }\n\n    setCustomerInputs({ ...customerInputs,\n      [e.target.getAttribute(\"name\")]: inputValue\n    });\n  };\n\n  const handleClick = e => {\n    setCustomerInputs({ ...customerInputs,\n      [e.target.parentNode.previousSibling.getAttribute(\"name\")]: e.target.value\n    });\n  };\n\n  const buttonClick = e => {\n    e.preventDefault();\n    document.querySelectorAll(\"button\").forEach(function (button) {\n      button.classList.remove(\"active\");\n    });\n    e.target.classList.add(\"active\");\n  }; //#endregion FUNCTIONS\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading === true ? /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"coh-container section coh-style-section\",\n      \"data-gs-background-color\": \"light-grey\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-inner steps\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${whichStep === 8 ? \"\" : \"coh-container-boxed\"}`,\n          children: renderSteps(whichStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaasCalculator, \"rWTtN1eeBYDDV2YxF4RK51qWY8Q=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Step1","Step2","Step3","Step4","Step5","Step6","Step7","Step8","PaasCalculator","renderSteps","whichStep","setWhichStep","customerInputs","handleChange","setPADDRegion","setCustomerInputs","handleClick","buttonClick","pricing","totalMonthlyPaaSPowerCost","totalMonthlyPaaSMaintenanceCost","requiredEquipment","breakeven","reductionFromNGBRResale","gasZTR","cashPurchase","NGBRWithFlexiblePowerProgram","numberOfMaintenanceJobsPerYear","averageTotalTimeForServicing","monthlyPaaSPowerCostNGBR","monthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","monthlyMaintenanceCostPerZTR","enviromentalBenefits","poundsOfCO2Avoided","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","setRequiredEquipment","equipment","deault","powerProgramCosts","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPricing","setMonthlyPaaSPowerCostNGBR","setTotalMonthlyPaaSPowerCost","setMonthlyMaintenanceCostPerZTR","setMonthlyFuelCostPerZTR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","latestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","setCashPurchase","TCOofNGBR","power","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","setNumberOfMaintenanceJobsPerYear","setReductionFromNGBRResale","location","mowingHours","daysMowedPerWeek","lengthMowingSeason","Math","round","numberNGBRUnits","bateries","chargers","totalBateries","totalChargers","gasZTRPrice","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","e","inputValue","isNaN","target","value","getAttribute","parentNode","previousSibling","preventDefault","document","querySelectorAll","button","classList","remove","add"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\nimport Loading from \"./loading/Loading\";\nimport Step1 from \"./steps/Step1\";\nimport Step2 from \"./steps/Step2\";\nimport Step3 from \"./steps/Step3\";\nimport Step4 from \"./steps/Step4\";\nimport Step5 from \"./steps/Step5\";\nimport Step6 from \"./steps/Step6\";\nimport Step7 from \"./steps/Step7\";\nimport Step8 from \"./steps/Step8\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region STEPS\n  const renderSteps = (whichStep) => {\n    switch (whichStep) {\n      case 2:\n        return (\n          <Step2\n            {...{\n              whichStep,\n              setWhichStep,\n              customerInputs,\n              handleChange,\n              setPADDRegion,\n              setCustomerInputs,\n            }}\n          />\n        );\n      case 3:\n        return (\n          <Step3\n            {...{\n              whichStep,\n              setWhichStep,\n              customerInputs,\n              handleChange,\n              handleClick,\n              setCustomerInputs,\n            }}\n          />\n        );\n      case 4:\n        return (\n          <Step4\n            {...{\n              whichStep,\n              setWhichStep,\n              customerInputs,\n              handleChange,\n              handleClick,\n              setPADDRegion,\n              setCustomerInputs,\n            }}\n          />\n        );\n      case 5:\n        return (\n          <Step5\n            {...{\n              whichStep,\n              setWhichStep,\n              handleChange,\n              buttonClick,\n              setCustomerInputs,\n              setPADDRegion,\n              customerInputs,\n            }}\n          />\n        );\n      case 6:\n        return (\n          <Step6\n            {...{\n              whichStep,\n              setWhichStep,\n              handleChange,\n              handleClick,\n              customerInputs,\n              setPADDRegion,\n              setCustomerInputs,\n            }}\n          />\n        );\n      case 7:\n        return <Step7 {...{ whichStep, setWhichStep }} />;\n      case 8:\n        return (\n          <Step8\n            {...{\n              pricing,\n              totalMonthlyPaaSPowerCost,\n              totalMonthlyPaaSMaintenanceCost,\n              requiredEquipment,\n              breakeven,\n              reductionFromNGBRResale,\n              gasZTR,\n              cashPurchase,\n              NGBRWithFlexiblePowerProgram,\n              numberOfMaintenanceJobsPerYear,\n              averageTotalTimeForServicing,\n              monthlyPaaSPowerCostNGBR,\n              customerInputs,\n              monthlyFuelCostPerZTR,\n              monthlyMaintenanceCostPerNGBR,\n              monthlyMaintenanceCostPerZTR,\n              enviromentalBenefits,\n              poundsOfCO2Avoided,\n              whichStep,\n              setPADDRegion,\n              setCustomerInputs,\n            }}\n          />\n        );\n\n      default:\n        return (\n          <Step1\n            {...{\n              whichStep,\n              setWhichStep,\n              customerInputs,\n              handleChange,\n              setPADDRegion,\n              setCustomerInputs,\n            }}\n          />\n        );\n    }\n  };\n  //#endregion\n\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false);\n    // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [\n    latestFuelWeeklyPrice,\n    latestAvgPowerPrice,\n    PADDRegion,\n    customerInputs.location,\n  ]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  //#region FUCNTIONS\n  const handleChange = (e) => {\n    let inputValue;\n    if (isNaN(e.target.value)) {\n      inputValue = e.target.value;\n    } else {\n      inputValue = Number(e.target.value);\n    }\n\n    setCustomerInputs({\n      ...customerInputs,\n      [e.target.getAttribute(\"name\")]: inputValue,\n    });\n  };\n\n  const handleClick = (e) => {\n    setCustomerInputs({\n      ...customerInputs,\n      [e.target.parentNode.previousSibling.getAttribute(\"name\")]:\n        e.target.value,\n    });\n  };\n\n  const buttonClick = (e) => {\n    e.preventDefault();\n    document.querySelectorAll(\"button\").forEach(function (button) {\n      button.classList.remove(\"active\");\n    });\n    e.target.classList.add(\"active\");\n  };\n  //#endregion FUNCTIONS\n\n  return (\n    <>\n      {loading === true ? (\n        <Loading {...{ loading }} />\n      ) : (\n        <section\n          className=\"coh-container section coh-style-section\"\n          data-gs-background-color=\"light-grey\"\n        >\n          <div className=\"section-inner steps\">\n            <div className={`${whichStep === 8 ? \"\" : \"coh-container-boxed\"}`}>\n              {renderSteps(whichStep)}\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}