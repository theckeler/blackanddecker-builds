{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/inputs/State.js\";\nimport statesJSON from \"../../data/states.json\";\nimport ButtonEdit from \"../elements/ButtonEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst State = _ref => {\n  let {\n    customerInputs,\n    //setCustomerInputs,\n    setPADDRegion,\n    inStep,\n    whichStep,\n    setWhichStep,\n    editThis,\n    setEditThis\n  } = _ref;\n  let states = JSON.parse(JSON.stringify(statesJSON));\n\n  const handleChange = e => {//  setCustomerInputs({\n    //    ...customerInputs,\n    //    gasZTRPrice: e.target.value,\n    //  });\n  };\n\n  const handleEdit = e => {\n    setEditThis({\n      gasZTRPrice: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: false,\n      state: !editThis.state\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      id: \"location\",\n      children: [inStep ? \"Which state do you operate in? (disabled)\" : \"State\", /*#__PURE__*/_jsxDEV(ButtonEdit, {\n        whichStep,\n        onClick: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), inStep || editThis.state ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"input\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        htmlFor: \"location\",\n        value: customerInputs.location,\n        onChange: e => {\n          handleChange(e);\n          const newState = states.find(state => state.abbr === e.target.value);\n          setPADDRegion(`PADD${newState.padd}`);\n        },\n        disabled: true,\n        children: states.map(state => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state.abbr,\n            children: [state.name, \" - PADD \", state.padd]\n          }, state.abbr, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"coh-heading subtitle coh-style-h2---display\",\n        children: customerInputs.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), whichStep !== 8 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => setWhichStep(1),\n          className: \"go-button\",\n          children: \"GO TO STEP 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_c = State;\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"State\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/inputs/State.js"],"names":["statesJSON","ButtonEdit","State","customerInputs","setPADDRegion","inStep","whichStep","setWhichStep","editThis","setEditThis","states","JSON","parse","stringify","handleChange","e","handleEdit","gasZTRPrice","daysMowedPerWeek","numberNGBRUnits","mowingHours","lengthMowingSeason","state","location","newState","find","abbr","target","value","padd","map","name"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;;;AAEA,MAAMC,KAAK,GAAG,QASR;AAAA,MATS;AACbC,IAAAA,cADa;AAEb;AACAC,IAAAA,aAHa;AAIbC,IAAAA,MAJa;AAKbC,IAAAA,SALa;AAMbC,IAAAA,YANa;AAObC,IAAAA,QAPa;AAQbC,IAAAA;AARa,GAST;AACJ,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,UAAf,CAAX,CAAb;;AAEA,QAAMc,YAAY,GAAIC,CAAD,IAAO,CAC1B;AACA;AACA;AACA;AACD,GALD;;AAOA,QAAMC,UAAU,GAAID,CAAD,IAAO;AACxBN,IAAAA,WAAW,CAAC;AACVQ,MAAAA,WAAW,EAAE,KADH;AAEVC,MAAAA,gBAAgB,EAAE,KAFR;AAGVC,MAAAA,eAAe,EAAE,KAHP;AAIVC,MAAAA,WAAW,EAAE,KAJH;AAKVC,MAAAA,kBAAkB,EAAE,KALV;AAMVC,MAAAA,KAAK,EAAE,CAACd,QAAQ,CAACc;AANP,KAAD,CAAX;AAQD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA,iBACGjB,MAAM,GAAG,2CAAH,GAAiD,OAD1D,eAGE,QAAC,UAAD;AAAkBC,QAAAA,SAAlB;AAA+B,QAAA,OAAO,EAAEU;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGX,MAAM,IAAIG,QAAQ,CAACc,KAAnB,gBAEG;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,6BACE;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAEnB,cAAc,CAACoB,QAFxB;AAGE,QAAA,QAAQ,EAAGR,CAAD,IAAO;AACfD,UAAAA,YAAY,CAACC,CAAD,CAAZ;AACA,gBAAMS,QAAQ,GAAGd,MAAM,CAACe,IAAP,CACdH,KAAD,IAAWA,KAAK,CAACI,IAAN,KAAeX,CAAC,CAACY,MAAF,CAASC,KADpB,CAAjB;AAGAxB,UAAAA,aAAa,CAAE,OAAMoB,QAAQ,CAACK,IAAK,EAAtB,CAAb;AACD,SATH;AAUE,QAAA,QAAQ,MAVV;AAAA,kBAYGnB,MAAM,CAACoB,GAAP,CAAYR,KAAD,IAAW;AACrB,8BACE;AAAyB,YAAA,KAAK,EAAEA,KAAK,CAACI,IAAtC;AAAA,uBACGJ,KAAK,CAACS,IADT,cACuBT,KAAK,CAACO,IAD7B;AAAA,aAAaP,KAAK,CAACI,IAAnB;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFH,gBA0BC;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,6CAAhB;AAAA,kBACGvB,cAAc,CAACoB;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,EAIGjB,SAAS,KAAK,CAAd,iBACC;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAGS,CAAD,IAAOR,YAAY,CAAC,CAAD,CAApC;AAAyC,UAAA,SAAS,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,sBALJ;AAAA,oBAhCJ;AAAA,kBADF;AAiDD,CA/ED;;KAAML,K;AAiFN,eAAeA,KAAf","sourcesContent":["import statesJSON from \"../../data/states.json\";\nimport ButtonEdit from \"../elements/ButtonEdit\";\n\nconst State = ({\n  customerInputs,\n  //setCustomerInputs,\n  setPADDRegion,\n  inStep,\n  whichStep,\n  setWhichStep,\n  editThis,\n  setEditThis,\n}) => {\n  let states = JSON.parse(JSON.stringify(statesJSON));\n\n  const handleChange = (e) => {\n    //  setCustomerInputs({\n    //    ...customerInputs,\n    //    gasZTRPrice: e.target.value,\n    //  });\n  };\n\n  const handleEdit = (e) => {\n    setEditThis({\n      gasZTRPrice: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: false,\n      state: !editThis.state,\n    });\n  };\n\n  return (\n    <>\n      <label id=\"location\">\n        {inStep ? \"Which state do you operate in? (disabled)\" : \"State\"}\n        {/* <ButtonEdit {...{ whichStep, setEditThis }} /> */}\n        <ButtonEdit {...{ whichStep }} onClick={handleEdit} />\n      </label>\n      {inStep || editThis.state ? (\n        \n          <span className=\"input\">\n            <select\n              htmlFor=\"location\"\n              value={customerInputs.location}\n              onChange={(e) => {\n                handleChange(e);\n                const newState = states.find(\n                  (state) => state.abbr === e.target.value\n                );\n                setPADDRegion(`PADD${newState.padd}`);\n              }}\n              disabled\n            >\n              {states.map((state) => {\n                return (\n                  <option key={state.abbr} value={state.abbr}>\n                    {state.name} - PADD {state.padd}\n                  </option>\n                );\n              })}\n            </select>\n          </span>\n       \n      ) : (\n        <>\n          <span className=\"coh-heading subtitle coh-style-h2---display\">\n            {customerInputs.location}\n          </span>\n          {whichStep !== 8 && (\n            <>\n              <button onClick={(e) => setWhichStep(1)} className=\"go-button\">\n                GO TO STEP 1\n              </button>\n              <span className=\"circle\">1</span>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default State;\n"]},"metadata":{},"sourceType":"module"}