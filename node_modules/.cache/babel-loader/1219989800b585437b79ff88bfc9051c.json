{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  //#region PRE-CALCULATIONS\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice); // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  });\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false\n  }); //#endregion PRE-CALCULATIONS\n  //#region useEffects\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  useEffect(() => {\n    const resetInError = type => {\n      if (type === \"petroleum\") {\n        setLatestFuelWeeklyPrice(paasCal.latestFuelWeeklyPrice);\n      } else {\n        setLatestAvgPowerPrice(paasCal.latestAvgPowerPrice);\n      }\n    };\n\n    const fetchLatestPrices = async (url, type) => {\n      setLoading(true);\n      await fetch(url).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          resetInError(type);\n          throw new Error(\"Something went wrong\");\n        }\n      }).then(data => {\n        console.log(\"duoarea\", duoarea);\n        console.log(\"customerInputs.location\", customerInputs.location);\n\n        if (type === \"petroleum\") {\n          console.log(\"setLatestFuelWeeklyPrice:\", data.response.data[0].value);\n          setLatestFuelWeeklyPrice(data.response.data[0].value);\n        } else {\n          console.log(\"setLatestAvgPowerPrice:\", data.response.data[0].price / 100);\n          setLatestAvgPowerPrice(data.response.data[0].price / 100);\n          setLoading(false);\n        }\n      }).catch(error => {\n        console.error(\"Error:\", error);\n        resetInError(type);\n      });\n    };\n\n    const tasks = [fetchLatestPrices(`https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`, \"petroleum\"), fetchLatestPrices(`https://api.eia.gov/v2/electricity/retail-sales/data/?frequency=monthly&data[0]=price&facets[sectorid][]=RES&facets[stateid][]=${customerInputs.location}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`, \"electricity\")];\n    Promise.all(tasks).then();\n  }, [customerInputs.location, duoarea]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion\n  // STEPS COMFIGURATION:\n\n  const [whichStep, setWhichStep] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true && /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      whichStep,\n      setWhichStep,\n      customerInputs,\n      setDuoarea,\n      setCustomerInputs,\n      pricing,\n      requiredEquipment,\n      totalMonthlyPaaSPowerCost,\n      totalMonthlyPaaSMaintenanceCost,\n      breakeven,\n      reductionFromNGBRResale,\n      gasZTR,\n      cashPurchase,\n      NGBRWithFlexiblePowerProgram,\n      numberOfMaintenanceJobsPerYear,\n      averageTotalTimeForServicing,\n      monthlyPaaSPowerCostNGBR,\n      monthlyFuelCostPerZTR,\n      monthlyMaintenanceCostPerNGBR,\n      monthlyMaintenanceCostPerZTR,\n      enviromentalBenefits,\n      poundsOfCO2Avoided,\n      editThis,\n      setEditThis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"65LeovOe6FyhEjTp5fFGiU32Wqk=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Steps","PaasCalculator","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","duoarea","setDuoarea","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","setLatestFuelWeeklyPrice","latestAvgPowerPrice","setLatestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","editThis","setEditThis","state","gasZTRPrice","daysMowedPerWeek","numberNGBRUnits","mowingHours","lengthMowingSeason","resetInError","type","fetchLatestPrices","url","fetch","then","response","ok","json","Error","data","console","log","location","value","price","catch","error","tasks","process","env","REACT_APP_EIA_KEY","Promise","all","Math","round","bateries","chargers","totalBateries","totalChargers","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","whichStep","setWhichStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region PRE-CALCULATIONS\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [duoarea, setDuoarea] = useState(paasCal.duoarea);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(\n    paasCal.latestFuelWeeklyPrice\n  );\n  const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(\n    paasCal.latestAvgPowerPrice\n  );\n  // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  const [editThis, setEditThis] = useState({\n    state: false,\n    gasZTRPrice: false,\n    daysMowedPerWeek: false,\n    numberNGBRUnits: false,\n    mowingHours: false,\n    lengthMowingSeason: false,\n  });\n  //#endregion PRE-CALCULATIONS\n\n  //#region useEffects\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  useEffect(() => {\n    const resetInError = (type) => {\n      if (type === \"petroleum\") {\n        setLatestFuelWeeklyPrice(paasCal.latestFuelWeeklyPrice);\n      } else {\n        setLatestAvgPowerPrice(paasCal.latestAvgPowerPrice);\n      }\n    };\n\n    const fetchLatestPrices = async (url, type) => {\n      setLoading(true);\n      await fetch(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            resetInError(type);\n            throw new Error(\"Something went wrong\");\n          }\n        })\n        .then((data) => {\n          console.log(\"duoarea\", duoarea);\n          console.log(\"customerInputs.location\", customerInputs.location);\n\n          if (type === \"petroleum\") {\n            console.log(\n              \"setLatestFuelWeeklyPrice:\",\n              data.response.data[0].value\n            );\n            setLatestFuelWeeklyPrice(data.response.data[0].value);\n          } else {\n            console.log(\n              \"setLatestAvgPowerPrice:\",\n              data.response.data[0].price / 100\n            );\n            setLatestAvgPowerPrice(data.response.data[0].price / 100);\n            setLoading(false);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n          resetInError(type);\n        });\n    };\n\n    const tasks = [\n      fetchLatestPrices(\n        `https://api.eia.gov/v2/petroleum/pri/gnd/data/?frequency=weekly&data[0]=value&facets[product][]=EPMRU&facets[duoarea][]=${duoarea}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`,\n        \"petroleum\"\n      ),\n\n      fetchLatestPrices(\n        `https://api.eia.gov/v2/electricity/retail-sales/data/?frequency=monthly&data[0]=price&facets[sectorid][]=RES&facets[stateid][]=${customerInputs.location}&sort[0][column]=period&sort[0][direction]=desc&length=1&api_key=${process.env.REACT_APP_EIA_KEY}`,\n        \"electricity\"\n      ),\n    ];\n\n    Promise.all(tasks).then(\n      \n    )\n\n\n\n  }, [customerInputs.location, duoarea]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion\n\n  // STEPS COMFIGURATION:\n  const [whichStep, setWhichStep] = useState(1);\n\n  return (\n    <>\n      {loading === true && <Loading {...{ loading }} />}\n      <Steps\n        {...{\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          setDuoarea,\n          setCustomerInputs,\n          pricing,\n          requiredEquipment,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n          editThis,\n          setEditThis,\n        }}\n      />\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}