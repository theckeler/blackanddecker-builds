{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\"; // -----------------> Inputs <-----------------\n\nimport InputForm from \"./inputs/InputForm\";\nimport TotalCashPrice from \"./outputs/TotalCashPrice\";\nimport OpExCost from \"./outputs/OpExCost\";\nimport Hardware from \"./outputs/Hardware\";\nimport Breakeven from \"./outputs/Breakeven\";\nimport FinancingNGBR from \"./outputs/FinancingNGBR\";\nimport Environmental from \"./outputs/Environmental\";\nimport Maintenance from \"./outputs/Maintenance\";\nimport Compare from \"./outputs/Compare\"; //import MainOutput from \"./mainOutput\";\n\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  const [whichStep, setWhichStep] = useState(1); //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice; // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  }); // -----------------> useEffects <-----------------\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n  // Get Fuel & Electric Prices\n\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false); // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [latestFuelWeeklyPrice, latestAvgPowerPrice, PADDRegion, customerInputs.location]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion PRE-CALCULATIONS\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 809.6 195.8\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M.047.003h809.6v15.3H.047V.003zM.047 180.403h809.5v15.3H-.053v-15.3zM686.747 23.003h122.8v42.2h-33.3v107.1h-56.4v-107.1h-33.2v-42.2M602.347 23.003v149.4h102.4v-44.5h-46.2v-104.9h-56.2M487.047 23.003h61.8l47.4 149.4h-55.1l-5.6-22.7h-34.5l-5.1 22.7h-57.5l48.6-149.4zm21.7 93.4h19.2l-9.4-43.5-9.8 43.5M457.347 23.003h-55l-15.3 72.9-16.6-72.9h-48.6l-15.7 72.9-15-72.9h-54.9l41.1 149.4h51l17.2-72.9 17.6 72.9h52l42.2-149.4M155.047 55.003h81.9v30.7h-39.7v12.8h34.5v30.8h-34.5v12.7h39.7v30.4h-81.9v-117.4M.047 172.403v-149.4h70c41.3 0 74.2 22.5 74.2 75 0 51.1-31.8 74.4-74.5 74.4H.047zm57.8-44.7c17.7 0 29.4-7.4 29.4-30.1 0-24.9-11.6-31.6-29.3-31.6h-4.5v61.7h4.4M783.947 160.003c0-7 5.7-12.2 12.4-12.2s12.4 5.2 12.4 12.2c0 7.1-5.7 12.3-12.4 12.3-6.7-.1-12.4-5.2-12.4-12.3zm12.4 10.2c5.5 0 9.9-4.3 9.9-10.2 0-5.8-4.4-10.2-9.9-10.2-5.6 0-10 4.4-10 10.2 0 5.9 4.4 10.2 10 10.2zm-2.4-8.6h2l2.7 4.5h3l-3.1-4.7c2.1-.3 3.6-1.6 3.6-4.1 0-2.2-1.7-3.7-5.1-3.7h-5.4v12.6h2.3v-4.6zm0-2.1v-4h2.7c1.5 0 3.2.1 3.2 2 0 2.1-1.4 2.1-3.2 2.1h-2.7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(InputForm, {\n      setPADDRegion,\n      customerInputs,\n      setCustomerInputs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"column container-output\",\n        children: [/*#__PURE__*/_jsxDEV(TotalCashPrice, {\n          pricing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OpExCost, {\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Hardware, {\n          requiredEquipment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Breakeven, {\n          breakeven,\n          reductionFromNGBRResale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FinancingNGBR, {\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Maintenance, {\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Compare, {\n          monthlyPaaSPowerCostNGBR,\n          customerInputs,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          pricing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Environmental, {\n          enviromentalBenefits,\n          poundsOfCO2Avoided\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"/DUPpEDBZk3B50FPK9cr2HNBLmI=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","InputForm","TotalCashPrice","OpExCost","Hardware","Breakeven","FinancingNGBR","Environmental","Maintenance","Compare","PaasCalculator","whichStep","setWhichStep","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPADDRegion","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","latestFuelWeeklyPrice","latestAvgPowerPrice","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","location","mowingHours","daysMowedPerWeek","lengthMowingSeason","Math","round","numberNGBRUnits","bateries","chargers","totalBateries","totalChargers","gasZTRPrice","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n// -----------------> Inputs <-----------------\nimport InputForm from \"./inputs/InputForm\";\n\nimport TotalCashPrice from \"./outputs/TotalCashPrice\";\nimport OpExCost from \"./outputs/OpExCost\";\nimport Hardware from \"./outputs/Hardware\";\nimport Breakeven from \"./outputs/Breakeven\";\nimport FinancingNGBR from \"./outputs/FinancingNGBR\";\nimport Environmental from \"./outputs/Environmental\";\nimport Maintenance from \"./outputs/Maintenance\";\nimport Compare from \"./outputs/Compare\";\n\n//import MainOutput from \"./mainOutput\";\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  const [whichStep, setWhichStep] = useState(1);\n\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false);\n    // UNCOMMENT:\n    // const padds = {\n    //   PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n    //   PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n    //   PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n    //   PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n    //   PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    // };\n    // const eiaKey = process.env.REACT_APP_EIA_KEY;\n    // const fetchData = async (updateWhat, url) => {\n    //   await fetch(url)\n    //     .then((response) => response.json())\n    //     .then((data) => {\n    //       updateWhat === \"fuel\"\n    //         ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n    //         : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n    //       setLoading(false);\n    //     })\n    //     .catch((error) => {\n    //       setLoading(false);\n    //       console.error(\"There has been an error:\", error);\n    //     });\n    // };\n    // fetchData(\n    //   \"fuel\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    // );\n    // fetchData(\n    //   \"power\",\n    //   `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    // );\n  }, [\n    latestFuelWeeklyPrice,\n    latestAvgPowerPrice,\n    PADDRegion,\n    customerInputs.location,\n  ]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  return (\n    <>\n      {loading === true ? (\n        <div className=\"loading\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 809.6 195.8\">\n            <path d=\"M.047.003h809.6v15.3H.047V.003zM.047 180.403h809.5v15.3H-.053v-15.3zM686.747 23.003h122.8v42.2h-33.3v107.1h-56.4v-107.1h-33.2v-42.2M602.347 23.003v149.4h102.4v-44.5h-46.2v-104.9h-56.2M487.047 23.003h61.8l47.4 149.4h-55.1l-5.6-22.7h-34.5l-5.1 22.7h-57.5l48.6-149.4zm21.7 93.4h19.2l-9.4-43.5-9.8 43.5M457.347 23.003h-55l-15.3 72.9-16.6-72.9h-48.6l-15.7 72.9-15-72.9h-54.9l41.1 149.4h51l17.2-72.9 17.6 72.9h52l42.2-149.4M155.047 55.003h81.9v30.7h-39.7v12.8h34.5v30.8h-34.5v12.7h39.7v30.4h-81.9v-117.4M.047 172.403v-149.4h70c41.3 0 74.2 22.5 74.2 75 0 51.1-31.8 74.4-74.5 74.4H.047zm57.8-44.7c17.7 0 29.4-7.4 29.4-30.1 0-24.9-11.6-31.6-29.3-31.6h-4.5v61.7h4.4M783.947 160.003c0-7 5.7-12.2 12.4-12.2s12.4 5.2 12.4 12.2c0 7.1-5.7 12.3-12.4 12.3-6.7-.1-12.4-5.2-12.4-12.3zm12.4 10.2c5.5 0 9.9-4.3 9.9-10.2 0-5.8-4.4-10.2-9.9-10.2-5.6 0-10 4.4-10 10.2 0 5.9 4.4 10.2 10 10.2zm-2.4-8.6h2l2.7 4.5h3l-3.1-4.7c2.1-.3 3.6-1.6 3.6-4.1 0-2.2-1.7-3.7-5.1-3.7h-5.4v12.6h2.3v-4.6zm0-2.1v-4h2.7c1.5 0 3.2.1 3.2 2 0 2.1-1.4 2.1-3.2 2.1h-2.7\" />\n          </svg>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <InputForm {...{ setPADDRegion, customerInputs, setCustomerInputs }} />\n\n      <ul className=\"main\">\n        <li className=\"column container-output\">\n          <TotalCashPrice {...{ pricing }} />\n          <OpExCost\n            {...{\n              totalMonthlyPaaSPowerCost,\n              totalMonthlyPaaSMaintenanceCost,\n            }}\n          />\n          <Hardware {...{ requiredEquipment }} />\n          <Breakeven {...{ breakeven, reductionFromNGBRResale }} />\n          <FinancingNGBR\n            {...{ gasZTR, cashPurchase, NGBRWithFlexiblePowerProgram }}\n          />\n          <Maintenance\n            {...{\n              numberOfMaintenanceJobsPerYear,\n              averageTotalTimeForServicing,\n            }}\n          />\n          <Compare\n            {...{\n              monthlyPaaSPowerCostNGBR,\n              customerInputs,\n              monthlyFuelCostPerZTR,\n              monthlyMaintenanceCostPerNGBR,\n              monthlyMaintenanceCostPerZTR,\n              pricing,\n            }}\n          />\n          <Environmental {...{ enviromentalBenefits, poundsOfCO2Avoided }} />\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}