{"ast":null,"code":"import _objectSpread from\"/Users/toddheckeler/websites/paas-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import RangeTicks from\"../elements/RangeTicks\";import ButtonEdit from\"../elements/ButtonEdit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LengthMowingSeason=function LengthMowingSeason(_ref){var customerInputs=_ref.customerInputs,setCustomerInputs=_ref.setCustomerInputs,inStep=_ref.inStep,whichStep=_ref.whichStep,setWhichStep=_ref.setWhichStep,editThis=_ref.editThis,setEditThis=_ref.setEditThis,onStepClick=_ref.onStepClick;var handleChange=function handleChange(e){setCustomerInputs(_objectSpread(_objectSpread({},customerInputs),{},{lengthMowingSeason:e.target.value}));};var handleClick=function handleClick(e){setCustomerInputs(_objectSpread(_objectSpread({},customerInputs),{},{lengthMowingSeason:e.target.value}));setEditThis({state:false,daysMowedPerWeek:false,numberNGBRUnits:false,mowingHours:false,lengthMowingSeason:false,gasZTRPrice:false});};var handleEdit=function handleEdit(e){setEditThis({state:false,gasZTRPrice:false,daysMowedPerWeek:false,numberNGBRUnits:false,mowingHours:false,lengthMowingSeason:!editThis.lengthMowingSeason});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"label\",{for:\"lengthMowingSeason\",children:[inStep?\"How long is your mowing season per year?\":\"Season\",/*#__PURE__*/_jsx(ButtonEdit,{whichStep:whichStep,onClick:handleEdit})]}),inStep||editThis.lengthMowingSeason?/*#__PURE__*/_jsxs(\"span\",{className:\"input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"6\",max:\"12\",step:\"1\",value:customerInputs.lengthMowingSeason,onChange:handleChange,onMouseUp:function onMouseUp(e){setEditThis({state:false,daysMowedPerWeek:false,numberNGBRUnits:false,mowingHours:false,lengthMowingSeason:false,gasZTRPrice:false});},name:\"lengthMowingSeason\",id:\"lengthMowingSeason\",list:\"lengthMowingSeason-ticks\"}),/*#__PURE__*/_jsx(RangeTicks,{handleClick:handleClick,sliderID:\"lengthMowingSeason\",startTick:6,endTick:12,currentTick:customerInputs.lengthMowingSeason}),/*#__PURE__*/_jsx(\"output\",{className:\"slider-output coh-heading subtitle coh-style-h2---display\",children:editThis.lengthMowingSeason&&customerInputs.lengthMowingSeason})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"coh-heading subtitle coh-style-h2---display\",children:customerInputs.lengthMowingSeason}),whichStep!==8&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){setWhichStep(6);onStepClick(6);},id:\"go-button-6\",className:\"go-button\",children:\"GO TO STEP 6\"}),/*#__PURE__*/_jsx(\"span\",{className:\"circle\",children:\"6\"})]})]})]});};export default LengthMowingSeason;","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/inputs/LengthMowingSeason.js"],"names":["RangeTicks","ButtonEdit","LengthMowingSeason","customerInputs","setCustomerInputs","inStep","whichStep","setWhichStep","editThis","setEditThis","onStepClick","handleChange","e","lengthMowingSeason","target","value","handleClick","state","daysMowedPerWeek","numberNGBRUnits","mowingHours","gasZTRPrice","handleEdit"],"mappings":"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","sourcesContent":["import RangeTicks from \"../elements/RangeTicks\";\nimport ButtonEdit from \"../elements/ButtonEdit\";\n\nconst LengthMowingSeason = ({\n  customerInputs,\n  setCustomerInputs,\n  inStep,\n  whichStep,\n  setWhichStep,\n  editThis,\n  setEditThis,\n  onStepClick,\n}) => {\n  const handleChange = (e) => {\n    setCustomerInputs({\n      ...customerInputs,\n      lengthMowingSeason: e.target.value,\n    });\n  };\n\n  const handleClick = (e) => {\n    setCustomerInputs({\n      ...customerInputs,\n      lengthMowingSeason: e.target.value,\n    });\n    setEditThis({\n      state: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: false,\n      gasZTRPrice: false,\n    });\n  };\n\n  const handleEdit = (e) => {\n    setEditThis({\n      state: false,\n      gasZTRPrice: false,\n      daysMowedPerWeek: false,\n      numberNGBRUnits: false,\n      mowingHours: false,\n      lengthMowingSeason: !editThis.lengthMowingSeason,\n    });\n  };\n\n  return (\n    <>\n      <label for=\"lengthMowingSeason\">\n        {inStep ? \"How long is your mowing season per year?\" : \"Season\"}\n        <ButtonEdit {...{ whichStep }} onClick={handleEdit} />\n      </label>\n      {inStep || editThis.lengthMowingSeason ? (\n        <span className=\"input\">\n          <input\n            type=\"range\"\n            min=\"6\"\n            max=\"12\"\n            step=\"1\"\n            value={customerInputs.lengthMowingSeason}\n            onChange={handleChange}\n            onMouseUp={(e) => {\n              setEditThis({\n                state: false,\n                daysMowedPerWeek: false,\n                numberNGBRUnits: false,\n                mowingHours: false,\n                lengthMowingSeason: false,\n                gasZTRPrice: false,\n              });\n            }}\n            name=\"lengthMowingSeason\"\n            id=\"lengthMowingSeason\"\n            list=\"lengthMowingSeason-ticks\"\n          />\n          <RangeTicks\n            handleClick={handleClick}\n            sliderID=\"lengthMowingSeason\"\n            startTick={6}\n            endTick={12}\n            currentTick={customerInputs.lengthMowingSeason}\n          />\n          <output className=\"slider-output coh-heading subtitle coh-style-h2---display\">\n            {editThis.lengthMowingSeason && customerInputs.lengthMowingSeason}\n          </output>\n        </span>\n      ) : (\n        <>\n          <span className=\"coh-heading subtitle coh-style-h2---display\">\n            {customerInputs.lengthMowingSeason}\n          </span>\n          {whichStep !== 8 && (\n            <>\n              <button\n                onClick={(e) => {\n                  setWhichStep(6);\n                  onStepClick(6);\n                }}\n                id=\"go-button-6\"\n                className=\"go-button\"\n              >\n                GO TO STEP 6\n              </button>\n              <span className=\"circle\">6</span>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LengthMowingSeason;\n"]},"metadata":{},"sourceType":"module"}