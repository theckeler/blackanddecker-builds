{"ast":null,"code":"var _jsxFileName = \"/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\nimport \"../scss/paas-calculator.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaasCalculator = () => {\n  _s();\n\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true); //const [checkObserve, setCheckObserve] = useState(false);\n\n  const averageWeeksPerMonth = Number(paasCal.averageWeeksPerMonth / 12).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(paasCal.lengthOffSeason);\n  const [customerInputs, setCustomerInputs] = useState({ ...paasCal.customerInputs\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({ ...paasCal.equipment.deault\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing\n  };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing\n  });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(paasCal.monthlyPaaSPowerCostNGBR);\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] = useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] = useState(0); // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] = useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs\n  };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] = useState(1.978); // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] = useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] = useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] = useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] = useState({\n    depreciationOfBareNGBR: 0,\n    flexiblePowerProgramSubscription: 0,\n    financingFee36: 0,\n    financingFee48: 0\n  });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits\n  };\n  const [gallonsOfFuelConsumedOverPerYear, setGallonsOfFuelConsumedOverPerYear] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(paasCal.poundsOfCO2Avoided);\n  const averageFrequencyPerZTRServicing = paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer = paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing = averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] = useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({ ...paasCal.reductionFromNGBRResale\n  }); // -----------------> useEffects <-----------------\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n  // Get Fuel & Electric Prices\n\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false); // UNCOMMENT:\n\n    const padds = {\n      PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\",\n      // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n      PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\",\n      // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n      PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\",\n      // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n      PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\",\n      // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n      PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\" // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n\n    };\n    const eiaKey = process.env.REACT_APP_EIA_KEY;\n\n    const fetchData = async (updateWhat, url) => {\n      await fetch(url).then(response => response.json()).then(data => {\n        updateWhat === \"fuel\" ? setLatestFuelWeeklyPrice(data.series[0].data[0][1]) : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n        setLoading(false);\n      }).catch(error => {\n        setLoading(false);\n        console.error(\"There has been an error:\", error);\n      });\n    };\n\n    fetchData(\"fuel\", `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`);\n    fetchData(\"power\", `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`);\n  }, [latestFuelWeeklyPrice, latestAvgPowerPrice, PADDRegion, customerInputs.location]);\n  useEffect(() => {\n    setMowingMonthly((customerInputs.mowingHours * customerInputs.daysMowedPerWeek * averageWeeksPerMonth).toFixed(4));\n  }, [averageWeeksPerMonth, customerInputs.daysMowedPerWeek, customerInputs.mowingHours]);\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly));\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries: paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(Math.round(averageHourlyMaintenanceCost * mowingMonthly));\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly));\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas));\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits);\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits);\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    setCostofChargers(powerProgramCosts.charger * requiredEquipment.totalChargers);\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n  useEffect(() => {\n    setCostofBateries(powerProgramCosts.battery * requiredEquipment.totalBateries);\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: ((totalNGBRCostWith - totalGasZTRPurchasePrice) / savingsWithNGBRCashPurchase).toFixed(4),\n      breakevenFPPNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWithFPP).toFixed(4),\n      breakeven3yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith3yearFinancing).toFixed(4),\n      breakeven4yearFinancingNoResale: ((totalNGBRCostBare - totalGasZTRPurchasePrice) / savingsWith4yearFinancing).toFixed(4)\n    });\n  }, [savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase, totalGasZTRPurchasePrice, totalNGBRCostBare, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR((totalNGBRCostBare * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n  useEffect(() => {\n    setNGBRResalePriceNGBR((totalNGBRCostWith * (1 - depreciationInputs.electricZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n  useEffect(() => {\n    setGasZTRResalePrice((totalGasZTRPurchasePrice * (1 - depreciationInputs.gasZTRDepreciationRate)).toFixed(4));\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR);\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR: gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR: customerInputs.gasZTRPrice * depreciationInputs.gasZTRDepreciationRate * customerInputs.numberNGBRUnits,\n      fuel: totalMonthlyZTRFuelCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyZTRMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.gasZTRPrice, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, depreciationInputs.gasZTRDepreciationRate, gasZTR.depreciationofGasZTR, gasZTR.fuel, gasZTR.maintenance, lengthMowingOperationsTCO, totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR: cashPurchase.depreciationofGasZTR + cashPurchase.power + cashPurchase.maintenance,\n      depreciationofGasZTR: totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power: totalMonthlyPaaSPowerCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      maintenance: totalMonthlyPaaSMaintenanceCost * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [cashPurchase.depreciationofGasZTR, cashPurchase.maintenance, cashPurchase.power, customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost, totalNGBRCostWith]);\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR: totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription: pricing.targetPaasMonthlyPrice * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee36: pricing.priceMo36 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO,\n      financingFee48: pricing.priceMo48 * customerInputs.lengthMowingSeason * lengthMowingOperationsTCO\n    });\n  }, [customerInputs.lengthMowingSeason, depreciationInputs.electricZTRDepreciationRate, lengthMowingOperationsTCO, pricing.priceMo36, pricing.priceMo48, pricing.targetPaasMonthlyPrice, totalNGBRCostBare]);\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(fuelConsumptionRate * mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits);\n  }, [customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, fuelConsumptionRate, mowingMonthly]);\n  useEffect(() => {\n    setPoundsOfCO2Avoided(gallonsOfFuelConsumedOverPerYear * enviromentalBenefits.convertingGallonsOfGasolineToCO2);\n  }, [enviromentalBenefits.convertingGallonsOfGasolineToCO2, gallonsOfFuelConsumedOverPerYear]);\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear((mowingMonthly * customerInputs.lengthMowingSeason * customerInputs.numberNGBRUnits / averageFrequencyPerZTRServicing).toFixed(4));\n  }, [averageFrequencyPerZTRServicing, customerInputs.lengthMowingSeason, customerInputs.numberNGBRUnits, mowingMonthly]);\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(eZTRResalePremiumBareNGBR / savingsWith3yearFinancing),\n      financing48: Math.round(eZTRResalePremiumBareNGBR / savingsWith4yearFinancing)\n    });\n  }, [eZTRResalePremiumBareNGBR, eZTRResalePremiumCashPurchase, savingsWith3yearFinancing, savingsWith4yearFinancing, savingsWithFPP, savingsWithNGBRCashPurchase]);\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries,\n      chargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers,\n      totalBateries: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].bateries * customerInputs.numberNGBRUnits,\n      totalChargers: paasCal.equipment.requiredEquipment[customerInputs.mowingHours].chargers * customerInputs.numberNGBRUnits\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach(financingOption => {\n      financing = { ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(PMT(financingOption.interestRate / financingOption.totalNumberPayments, financingOption.presentValue, -pricing.totalCashPrice))\n      };\n    });\n    setPricing({\n      totalCashPrice: requiredEquipment.totalBateries * powerProgramCosts.battery + requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing\n    });\n  }, [requiredEquipment, powerProgramCosts.battery, powerProgramCosts.charger, pricing.totalCashPrice, pricing.priceMo48, pricing.targetPaasMonthlyPrice, lengthOffSeason]);\n  useEffect(() => {\n    setLengthMowingOperationsTCO((totalHoursMowedTCOAnalysis / (mowingMonthly * customerInputs.lengthMowingSeason)).toFixed(4));\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]); //#endregion PRE-CALCULATIONS\n  // STEPS COMFIGURATION:\n\n  const [whichStep, setWhichStep] = useState(1);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading === true && /*#__PURE__*/_jsxDEV(Loading, {\n      loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      whichStep,\n      setWhichStep,\n      customerInputs,\n      setPADDRegion,\n      setCustomerInputs,\n      pricing,\n      requiredEquipment,\n      totalMonthlyPaaSPowerCost,\n      totalMonthlyPaaSMaintenanceCost,\n      breakeven,\n      reductionFromNGBRResale,\n      gasZTR,\n      cashPurchase,\n      NGBRWithFlexiblePowerProgram,\n      numberOfMaintenanceJobsPerYear,\n      averageTotalTimeForServicing,\n      monthlyPaaSPowerCostNGBR,\n      monthlyFuelCostPerZTR,\n      monthlyMaintenanceCostPerNGBR,\n      monthlyMaintenanceCostPerZTR,\n      enviromentalBenefits,\n      poundsOfCO2Avoided\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaasCalculator, \"Sl8BQGRKaS7Nungp5NbYQE73QB0=\");\n\n_c = PaasCalculator;\nexport default PaasCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaasCalculator\");","map":{"version":3,"sources":["/Users/toddheckeler/websites/paas-calculator/src/components/PaasCalculator.js"],"names":["React","useState","useEffect","paasCal","PMT","Loading","Steps","PaasCalculator","loading","setLoading","averageWeeksPerMonth","Number","toFixed","mowingMonthly","setMowingMonthly","lengthOffSeason","setLengthOffSeason","customerInputs","setCustomerInputs","requiredEquipment","setRequiredEquipment","equipment","deault","powerProgramCosts","pricing","NGBRBatteryCapacity","averageHourlyMaintenanceCost","fuelConsumptionRate","electricMaintenanceCostGas","PADDRegion","setPADDRegion","setPricing","monthlyPaaSPowerCostNGBR","setMonthlyPaaSPowerCostNGBR","totalMonthlyPaaSPowerCost","setTotalMonthlyPaaSPowerCost","monthlyMaintenanceCostPerZTR","setMonthlyMaintenanceCostPerZTR","monthlyFuelCostPerZTR","setMonthlyFuelCostPerZTR","monthlyMaintenanceCostPerNGBR","setMonthlyMaintenanceCostPerNGBR","totalMonthlyZTRFuelCost","setTotalMonthlyZTRFuelCost","totalMonthlyZTRMaintenanceCost","setTotalMonthlyZTRMaintenanceCost","depreciationInputs","totalHoursMowedTCOAnalysis","lengthMowingOperationsTCO","setLengthMowingOperationsTCO","totalMonthlyPaaSMaintenanceCost","setTotalMonthlyPaaSMaintenanceCost","NGBROpEx","setNGBROpEx","gasZTROpEx","setGasZTROpEx","totalGasZTRPurchasePrice","setTotalGasZTRPurchasePrice","BareNGBR","totalNGBRCostBare","setTotalNGBRCostBare","costofChargers","setCostofChargers","costofBateries","setCostofBateries","totalNGBRCostWith","setTotalNGBRCostWith","savingsWith4yearFinancing","setSavingsWith4yearFinancing","savingsWith3yearFinancing","setSavingsWith3yearFinancing","savingsWithFPP","setSavingsWithFPP","savingsWithNGBRCashPurchase","setSavingsWithNGBRCashPurchase","breakeven","setBreakeven","breakeven4yearFinancingNoResale","breakeven3yearFinancingNoResale","breakevenFPPNoResale","breakevenOutrightPurchaseNoResale","NGBRResalePriceBareNGBR","setNGBRResalePriceBareNGBR","NGBRResalePriceNGBR","setNGBRResalePriceNGBR","gasZTRResalePrice","setGasZTRResalePrice","eZTRResalePremiumBareNGBR","setEZTRResalePremiumBareNGBR","eZTRResalePremiumCashPurchase","setEZTRResalePremiumCashPurchase","gasZTR","setGasZTR","TCOofGasZTR","depreciationofGasZTR","fuel","maintenance","cashPurchase","setCashPurchase","TCOofNGBR","power","NGBRWithFlexiblePowerProgram","setNGBRWithFlexiblePowerProgram","depreciationOfBareNGBR","flexiblePowerProgramSubscription","financingFee36","financingFee48","enviromentalBenefits","gallonsOfFuelConsumedOverPerYear","setGallonsOfFuelConsumedOverPerYear","poundsOfCO2Avoided","setPoundsOfCO2Avoided","averageFrequencyPerZTRServicing","averageCommuteToFromServicingDealer","averageTimeForServicing","averageTotalTimeForServicing","numberOfMaintenanceJobsPerYear","setNumberOfMaintenanceJobsPerYear","reductionFromNGBRResale","setReductionFromNGBRResale","padds","PADD1","PADD2","PADD3","PADD4","PADD5","eiaKey","process","env","REACT_APP_EIA_KEY","fetchData","updateWhat","url","fetch","then","response","json","data","setLatestFuelWeeklyPrice","series","setLatestAvgPowerPrice","catch","error","console","location","latestFuelWeeklyPrice","latestAvgPowerPrice","mowingHours","daysMowedPerWeek","lengthMowingSeason","Math","round","numberNGBRUnits","bateries","chargers","totalBateries","totalChargers","gasZTRPrice","charger","battery","priceMo48","priceMo36","targetPaasMonthlyPrice","electricZTRDepreciationRate","gasZTRDepreciationRate","convertingGallonsOfGasolineToCO2","FPP","financing36","financing48","financing","financingOptions","forEach","financingOption","presentValue","interestRate","totalNumberPayments","totalCashPrice","annualizedPaaSPrice","annualRebateOffSeason","whichStep","setWhichStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport paasCal from \"../data/paas-cal.json\";\nimport PMT from \"../utils/pmt\";\n\nimport Loading from \"./loading/Loading\";\nimport Steps from \"./steps/Steps\";\n\nimport \"../scss/paas-calculator.scss\";\n\nconst PaasCalculator = () => {\n  //#region PRE-CALCULATIONS\n  // -----------------> SETUP <-----------------\n  const [loading, setLoading] = useState(true);\n  //const [checkObserve, setCheckObserve] = useState(false);\n  const averageWeeksPerMonth = Number(\n    paasCal.averageWeeksPerMonth / 12\n  ).toFixed(4);\n  const [mowingMonthly, setMowingMonthly] = useState(paasCal.mowingMonthly);\n  const [lengthOffSeason, setLengthOffSeason] = useState(\n    paasCal.lengthOffSeason\n  );\n  const [customerInputs, setCustomerInputs] = useState({\n    ...paasCal.customerInputs,\n  });\n  const [requiredEquipment, setRequiredEquipment] = useState({\n    ...paasCal.equipment.deault,\n  });\n  const powerProgramCosts = { ...paasCal.equipment.pricing };\n  const NGBRBatteryCapacity = paasCal.NGBRBatteryCapacity;\n  const averageHourlyMaintenanceCost = paasCal.averageHourlyMaintenanceCost;\n  const fuelConsumptionRate = paasCal.fuelConsumptionRate;\n  const electricMaintenanceCostGas = paasCal.electricMaintenanceCostGas;\n  const [PADDRegion, setPADDRegion] = useState(paasCal.PADDRegion);\n  const [pricing, setPricing] = useState({ ...paasCal.pricing });\n  const [monthlyPaaSPowerCostNGBR, setMonthlyPaaSPowerCostNGBR] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [totalMonthlyPaaSPowerCost, setTotalMonthlyPaaSPowerCost] = useState(\n    paasCal.monthlyPaaSPowerCostNGBR\n  );\n  const [monthlyMaintenanceCostPerZTR, setMonthlyMaintenanceCostPerZTR] =\n    useState(0);\n  const [monthlyFuelCostPerZTR, setMonthlyFuelCostPerZTR] = useState(0);\n  const [monthlyMaintenanceCostPerNGBR, setMonthlyMaintenanceCostPerNGBR] =\n    useState(0);\n  // --------------------------------------------------------\n  // UNCOMMENT TO TURN ON API:\n  // const [latestFuelWeeklyPrice, setLatestFuelWeeklyPrice] = useState(paasCal.latestFuelWeeklyPrice);\n  // const [latestAvgPowerPrice, setLatestAvgPowerPrice] = useState(paasCal.latestAvgPowerPrice);\n  // COMMENT TO TURN ON API:\n  // const latestFuelWeeklyPrice = paasCal.latestFuelWeeklyPrice;\n  // const latestAvgPowerPrice = paasCal.latestAvgPowerPrice;\n  // --------------------------------------------------------\n  const [totalMonthlyZTRFuelCost, setTotalMonthlyZTRFuelCost] = useState(0);\n  const [totalMonthlyZTRMaintenanceCost, setTotalMonthlyZTRMaintenanceCost] =\n    useState(0);\n  const depreciationInputs = { ...paasCal.depreciationInputs };\n  const totalHoursMowedTCOAnalysis = 3000;\n  const [lengthMowingOperationsTCO, setLengthMowingOperationsTCO] =\n    useState(1.978);\n  // const paaSPremiumOverFourYearFinancing =\n  //   paasCal.paaSPremiumOverFourYearFinancing;\n  const [totalMonthlyPaaSMaintenanceCost, setTotalMonthlyPaaSMaintenanceCost] =\n    useState(0);\n  const [NGBROpEx, setNGBROpEx] = useState(0);\n  const [gasZTROpEx, setGasZTROpEx] = useState(0);\n  const [totalGasZTRPurchasePrice, setTotalGasZTRPurchasePrice] = useState(0);\n  const BareNGBR = paasCal.BareNGBR;\n  const [totalNGBRCostBare, setTotalNGBRCostBare] = useState(0);\n  const [costofChargers, setCostofChargers] = useState(0);\n  const [costofBateries, setCostofBateries] = useState(0);\n  const [totalNGBRCostWith, setTotalNGBRCostWith] = useState(0);\n  const [savingsWith4yearFinancing, setSavingsWith4yearFinancing] = useState(0);\n  const [savingsWith3yearFinancing, setSavingsWith3yearFinancing] = useState(0);\n  const [savingsWithFPP, setSavingsWithFPP] = useState(0);\n  const [savingsWithNGBRCashPurchase, setSavingsWithNGBRCashPurchase] =\n    useState(0);\n  const [breakeven, setBreakeven] = useState({\n    breakeven4yearFinancingNoResale: 0,\n    breakeven3yearFinancingNoResale: 0,\n    breakevenFPPNoResale: 0,\n    breakevenOutrightPurchaseNoResale: 0,\n  });\n  const [NGBRResalePriceBareNGBR, setNGBRResalePriceBareNGBR] = useState(0);\n  const [NGBRResalePriceNGBR, setNGBRResalePriceNGBR] = useState(0);\n  const [gasZTRResalePrice, setGasZTRResalePrice] = useState(0);\n  const [eZTRResalePremiumBareNGBR, setEZTRResalePremiumBareNGBR] = useState(0);\n  const [eZTRResalePremiumCashPurchase, setEZTRResalePremiumCashPurchase] =\n    useState(0);\n  const [gasZTR, setGasZTR] = useState({\n    TCOofGasZTR: 0,\n    depreciationofGasZTR: 0,\n    fuel: 0,\n    maintenance: 0,\n  });\n  const [cashPurchase, setCashPurchase] = useState({\n    TCOofNGBR: 0,\n    depreciationofGasZTR: 0,\n    power: 0,\n    maintenance: 0,\n  });\n  const [NGBRWithFlexiblePowerProgram, setNGBRWithFlexiblePowerProgram] =\n    useState({\n      depreciationOfBareNGBR: 0,\n      flexiblePowerProgramSubscription: 0,\n      financingFee36: 0,\n      financingFee48: 0,\n    });\n  const enviromentalBenefits = { ...paasCal.enviromentalBenefits };\n  const [\n    gallonsOfFuelConsumedOverPerYear,\n    setGallonsOfFuelConsumedOverPerYear,\n  ] = useState(paasCal.gallonsOfFuelConsumedOverPerYear);\n  const [poundsOfCO2Avoided, setPoundsOfCO2Avoided] = useState(\n    paasCal.poundsOfCO2Avoided\n  );\n  const averageFrequencyPerZTRServicing =\n    paasCal.averageFrequencyPerZTRServicing;\n  const averageCommuteToFromServicingDealer =\n    paasCal.averageCommuteToFromServicingDealer;\n  const averageTimeForServicing = paasCal.averageTimeForServicing;\n  const averageTotalTimeForServicing =\n    averageTimeForServicing + averageCommuteToFromServicingDealer;\n  const [numberOfMaintenanceJobsPerYear, setNumberOfMaintenanceJobsPerYear] =\n    useState(paasCal.numberOfMaintenanceJobsPerYear);\n  const [reductionFromNGBRResale, setReductionFromNGBRResale] = useState({\n    ...paasCal.reductionFromNGBRResale,\n  });\n\n  // -----------------> useEffects <-----------------\n\n  // OBSERVER:\n  // useEffect(() => {\n  //   const observer = new IntersectionObserver(\n  //     ([entry]) => {\n  //       if (entry.isIntersecting) {\n  //         setCheckObserve(true);\n  //         //console.log(\"in view\");\n  //       } else {\n  //         setCheckObserve(false);\n  //         document.querySelectorAll(\".tip\").forEach((tip) => {\n  //           tip.classList.remove(\"active\");\n  //         });\n  //       }\n  //     },\n  //     {\n  //       root: null,\n  //       //threshold: 0.7,\n  //     }\n  //   );\n  //   observer.observe(document.querySelector(\"#inputs\"));\n  // }, [checkObserve]);\n\n  // Get Fuel & Electric Prices\n  useEffect(() => {\n    /// REMOVE setLoading\n    setLoading(false);\n    // UNCOMMENT:\n    const padds = {\n      PADD1: \"PET.EMM_EPMRU_PTE_R10_DPG.W\", // PET.EMM_EPMRU_PTE_R10_DPG.W - PADD1\n      PADD2: \"PET.EMM_EPMRU_PTE_R20_DPG.W\", // PET.EMM_EPMRU_PTE_R20_DPG.W - PADD2\n      PADD3: \"PET.EMM_EPMRU_PTE_R30_DPG.W\", // PET.EMM_EPMRU_PTE_R30_DPG.W - PADD3\n      PADD4: \"PET.EMM_EPMRU_PTE_R40_DPG.W\", // PET.EMM_EPMRU_PTE_R40_DPG.W - PADD4\n      PADD5: \"PET.EMM_EPMRU_PTE_R50_DPG.W\", // PET.EMM_EPMRU_PTE_R50_DPG.W - PADD5\n    };\n    const eiaKey = process.env.REACT_APP_EIA_KEY;\n    const fetchData = async (updateWhat, url) => {\n      await fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          updateWhat === \"fuel\"\n            ? setLatestFuelWeeklyPrice(data.series[0].data[0][1])\n            : setLatestAvgPowerPrice(data.series[0].data[0][1] / 100);\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n          console.error(\"There has been an error:\", error);\n        });\n    };\n    fetchData(\n      \"fuel\",\n      `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=${padds[PADDRegion]}`\n    );\n    fetchData(\n      \"power\",\n      `https://api.eia.gov/series/?api_key=${eiaKey}&series_id=ELEC.PRICE.${customerInputs.location}-ALL.M`\n    );\n  }, [\n    latestFuelWeeklyPrice,\n    latestAvgPowerPrice,\n    PADDRegion,\n    customerInputs.location,\n  ]);\n\n  useEffect(() => {\n    setMowingMonthly(\n      (\n        customerInputs.mowingHours *\n        customerInputs.daysMowedPerWeek *\n        averageWeeksPerMonth\n      ).toFixed(4)\n    );\n  }, [\n    averageWeeksPerMonth,\n    customerInputs.daysMowedPerWeek,\n    customerInputs.mowingHours,\n  ]);\n\n  useEffect(() => {\n    setLengthOffSeason(12 - customerInputs.lengthMowingSeason);\n  }, [customerInputs.lengthMowingSeason]);\n\n  useEffect(() => {\n    setMonthlyPaaSPowerCostNGBR(\n      Math.round(latestAvgPowerPrice * NGBRBatteryCapacity * mowingMonthly)\n    );\n  }, [NGBRBatteryCapacity, latestAvgPowerPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSPowerCost(\n      monthlyPaaSPowerCostNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyPaaSPowerCostNGBR]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries: paasCal.equipment.deault.bateries,\n      chargers: paasCal.equipment.deault.chargers,\n      totalBateries:\n        paasCal.equipment.deault.bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.deault.chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerZTR(\n      Math.round(averageHourlyMaintenanceCost * mowingMonthly)\n    );\n  }, [averageHourlyMaintenanceCost, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyFuelCostPerZTR(\n      Math.round(latestFuelWeeklyPrice * fuelConsumptionRate * mowingMonthly)\n    );\n  }, [fuelConsumptionRate, latestFuelWeeklyPrice, mowingMonthly]);\n\n  useEffect(() => {\n    setMonthlyMaintenanceCostPerNGBR(\n      Math.round(monthlyMaintenanceCostPerZTR * electricMaintenanceCostGas)\n    );\n  }, [electricMaintenanceCostGas, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyPaaSMaintenanceCost(\n      monthlyMaintenanceCostPerNGBR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerNGBR]);\n\n  useEffect(() => {\n    setNGBROpEx(totalMonthlyPaaSPowerCost + totalMonthlyPaaSMaintenanceCost);\n  }, [totalMonthlyPaaSMaintenanceCost, totalMonthlyPaaSPowerCost]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRFuelCost(\n      monthlyFuelCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyFuelCostPerZTR]);\n\n  useEffect(() => {\n    setTotalMonthlyZTRMaintenanceCost(\n      monthlyMaintenanceCostPerZTR * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.numberNGBRUnits, monthlyMaintenanceCostPerZTR]);\n\n  useEffect(() => {\n    setGasZTROpEx(totalMonthlyZTRFuelCost + totalMonthlyZTRMaintenanceCost);\n  }, [totalMonthlyZTRFuelCost, totalMonthlyZTRMaintenanceCost]);\n\n  useEffect(() => {\n    setTotalGasZTRPurchasePrice(\n      customerInputs.gasZTRPrice * customerInputs.numberNGBRUnits\n    );\n  }, [customerInputs.gasZTRPrice, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setTotalNGBRCostBare(BareNGBR * customerInputs.numberNGBRUnits);\n  }, [BareNGBR, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    setCostofChargers(\n      powerProgramCosts.charger * requiredEquipment.totalChargers\n    );\n  }, [powerProgramCosts.charger, requiredEquipment.totalChargers]);\n\n  useEffect(() => {\n    setCostofBateries(\n      powerProgramCosts.battery * requiredEquipment.totalBateries\n    );\n  }, [powerProgramCosts.battery, requiredEquipment.totalBateries]);\n\n  useEffect(() => {\n    setTotalNGBRCostWith(costofBateries + costofChargers + totalNGBRCostBare);\n  }, [costofBateries, costofChargers, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setSavingsWith4yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo48));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo48]);\n\n  useEffect(() => {\n    setSavingsWith3yearFinancing(gasZTROpEx - (NGBROpEx + pricing.priceMo36));\n  }, [NGBROpEx, gasZTROpEx, pricing.priceMo36]);\n\n  useEffect(() => {\n    setSavingsWithFPP(gasZTROpEx - (NGBROpEx + pricing.targetPaasMonthlyPrice));\n  }, [NGBROpEx, gasZTROpEx, pricing.targetPaasMonthlyPrice]);\n\n  useEffect(() => {\n    setSavingsWithNGBRCashPurchase(gasZTROpEx - NGBROpEx);\n  }, [NGBROpEx, gasZTROpEx]);\n\n  useEffect(() => {\n    setBreakeven({\n      breakevenOutrightPurchaseNoResale: (\n        (totalNGBRCostWith - totalGasZTRPurchasePrice) /\n        savingsWithNGBRCashPurchase\n      ).toFixed(4),\n      breakevenFPPNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWithFPP\n      ).toFixed(4),\n      breakeven3yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith3yearFinancing\n      ).toFixed(4),\n      breakeven4yearFinancingNoResale: (\n        (totalNGBRCostBare - totalGasZTRPurchasePrice) /\n        savingsWith4yearFinancing\n      ).toFixed(4),\n    });\n  }, [\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n    totalGasZTRPurchasePrice,\n    totalNGBRCostBare,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRResalePriceBareNGBR(\n      (\n        totalNGBRCostBare *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostBare]);\n\n  useEffect(() => {\n    setNGBRResalePriceNGBR(\n      (\n        totalNGBRCostWith *\n        (1 - depreciationInputs.electricZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.electricZTRDepreciationRate, totalNGBRCostWith]);\n\n  useEffect(() => {\n    setGasZTRResalePrice(\n      (\n        totalGasZTRPurchasePrice *\n        (1 - depreciationInputs.gasZTRDepreciationRate)\n      ).toFixed(4)\n    );\n  }, [depreciationInputs.gasZTRDepreciationRate, totalGasZTRPurchasePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumBareNGBR(NGBRResalePriceBareNGBR - gasZTRResalePrice);\n  }, [NGBRResalePriceBareNGBR, gasZTRResalePrice]);\n\n  useEffect(() => {\n    setEZTRResalePremiumCashPurchase(\n      NGBRResalePriceNGBR - eZTRResalePremiumBareNGBR\n    );\n  }, [NGBRResalePriceNGBR, eZTRResalePremiumBareNGBR]);\n\n  useEffect(() => {\n    setGasZTR({\n      TCOofGasZTR:\n        gasZTR.depreciationofGasZTR + gasZTR.fuel + gasZTR.maintenance,\n      depreciationofGasZTR:\n        customerInputs.gasZTRPrice *\n        depreciationInputs.gasZTRDepreciationRate *\n        customerInputs.numberNGBRUnits,\n      fuel:\n        totalMonthlyZTRFuelCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyZTRMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.gasZTRPrice,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    depreciationInputs.gasZTRDepreciationRate,\n    gasZTR.depreciationofGasZTR,\n    gasZTR.fuel,\n    gasZTR.maintenance,\n    lengthMowingOperationsTCO,\n    totalMonthlyZTRFuelCost,\n    totalMonthlyZTRMaintenanceCost,\n  ]);\n\n  useEffect(() => {\n    setCashPurchase({\n      TCOofNGBR:\n        cashPurchase.depreciationofGasZTR +\n        cashPurchase.power +\n        cashPurchase.maintenance,\n      depreciationofGasZTR:\n        totalNGBRCostWith * depreciationInputs.electricZTRDepreciationRate,\n      power:\n        totalMonthlyPaaSPowerCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      maintenance:\n        totalMonthlyPaaSMaintenanceCost *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    cashPurchase.depreciationofGasZTR,\n    cashPurchase.maintenance,\n    cashPurchase.power,\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    totalMonthlyPaaSMaintenanceCost,\n    totalMonthlyPaaSPowerCost,\n    totalNGBRCostWith,\n  ]);\n\n  useEffect(() => {\n    setNGBRWithFlexiblePowerProgram({\n      depreciationOfBareNGBR:\n        totalNGBRCostBare * depreciationInputs.electricZTRDepreciationRate,\n      flexiblePowerProgramSubscription:\n        pricing.targetPaasMonthlyPrice *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee36:\n        pricing.priceMo36 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n      financingFee48:\n        pricing.priceMo48 *\n        customerInputs.lengthMowingSeason *\n        lengthMowingOperationsTCO,\n    });\n  }, [\n    customerInputs.lengthMowingSeason,\n    depreciationInputs.electricZTRDepreciationRate,\n    lengthMowingOperationsTCO,\n    pricing.priceMo36,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    totalNGBRCostBare,\n  ]);\n\n  useEffect(() => {\n    setGallonsOfFuelConsumedOverPerYear(\n      fuelConsumptionRate *\n        mowingMonthly *\n        customerInputs.lengthMowingSeason *\n        customerInputs.numberNGBRUnits\n    );\n  }, [\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    fuelConsumptionRate,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setPoundsOfCO2Avoided(\n      gallonsOfFuelConsumedOverPerYear *\n        enviromentalBenefits.convertingGallonsOfGasolineToCO2\n    );\n  }, [\n    enviromentalBenefits.convertingGallonsOfGasolineToCO2,\n    gallonsOfFuelConsumedOverPerYear,\n  ]);\n\n  useEffect(() => {\n    setNumberOfMaintenanceJobsPerYear(\n      (\n        (mowingMonthly *\n          customerInputs.lengthMowingSeason *\n          customerInputs.numberNGBRUnits) /\n        averageFrequencyPerZTRServicing\n      ).toFixed(4)\n    );\n  }, [\n    averageFrequencyPerZTRServicing,\n    customerInputs.lengthMowingSeason,\n    customerInputs.numberNGBRUnits,\n    mowingMonthly,\n  ]);\n\n  useEffect(() => {\n    setReductionFromNGBRResale({\n      cashPurchase: Math.round(\n        eZTRResalePremiumCashPurchase / savingsWithNGBRCashPurchase\n      ),\n      FPP: Math.round(eZTRResalePremiumBareNGBR / savingsWithFPP),\n      financing36: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith3yearFinancing\n      ),\n      financing48: Math.round(\n        eZTRResalePremiumBareNGBR / savingsWith4yearFinancing\n      ),\n    });\n  }, [\n    eZTRResalePremiumBareNGBR,\n    eZTRResalePremiumCashPurchase,\n    savingsWith3yearFinancing,\n    savingsWith4yearFinancing,\n    savingsWithFPP,\n    savingsWithNGBRCashPurchase,\n  ]);\n\n  useEffect(() => {\n    setRequiredEquipment({\n      bateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries,\n      chargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers,\n      totalBateries:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .bateries * customerInputs.numberNGBRUnits,\n      totalChargers:\n        paasCal.equipment.requiredEquipment[customerInputs.mowingHours]\n          .chargers * customerInputs.numberNGBRUnits,\n    });\n  }, [customerInputs.mowingHours, customerInputs.numberNGBRUnits]);\n\n  useEffect(() => {\n    let financing;\n    paasCal.financingOptions.forEach((financingOption) => {\n      financing = {\n        ...financing,\n        [`priceMo${financingOption.presentValue}`]: Math.round(\n          PMT(\n            financingOption.interestRate / financingOption.totalNumberPayments,\n            financingOption.presentValue,\n            -pricing.totalCashPrice\n          )\n        ),\n      };\n    });\n\n    setPricing({\n      totalCashPrice:\n        requiredEquipment.totalBateries * powerProgramCosts.battery +\n        requiredEquipment.totalChargers * powerProgramCosts.charger,\n      targetPaasMonthlyPrice: Math.round(\n        pricing.priceMo48 + (pricing.priceMo48 * 0.1 + 1)\n      ),\n      annualizedPaaSPrice: Math.round(pricing.targetPaasMonthlyPrice * 12),\n      annualRebateOffSeason: lengthOffSeason * pricing.targetPaasMonthlyPrice,\n      ...financing,\n    });\n  }, [\n    requiredEquipment,\n    powerProgramCosts.battery,\n    powerProgramCosts.charger,\n    pricing.totalCashPrice,\n    pricing.priceMo48,\n    pricing.targetPaasMonthlyPrice,\n    lengthOffSeason,\n  ]);\n\n  useEffect(() => {\n    setLengthMowingOperationsTCO(\n      (\n        totalHoursMowedTCOAnalysis /\n        (mowingMonthly * customerInputs.lengthMowingSeason)\n      ).toFixed(4)\n    );\n  }, [customerInputs.lengthMowingSeason, mowingMonthly]);\n  //#endregion PRE-CALCULATIONS\n\n  // STEPS COMFIGURATION:\n  const [whichStep, setWhichStep] = useState(1);\n\n  return (\n    <>\n      {loading === true && <Loading {...{ loading }} />}\n      <Steps\n        {...{\n          whichStep,\n          setWhichStep,\n          customerInputs,\n          setPADDRegion,\n          setCustomerInputs,\n          pricing,\n          requiredEquipment,\n          totalMonthlyPaaSPowerCost,\n          totalMonthlyPaaSMaintenanceCost,\n          breakeven,\n          reductionFromNGBRResale,\n          gasZTR,\n          cashPurchase,\n          NGBRWithFlexiblePowerProgram,\n          numberOfMaintenanceJobsPerYear,\n          averageTotalTimeForServicing,\n          monthlyPaaSPowerCostNGBR,\n          monthlyFuelCostPerZTR,\n          monthlyMaintenanceCostPerNGBR,\n          monthlyMaintenanceCostPerZTR,\n          enviromentalBenefits,\n          poundsOfCO2Avoided,\n        }}\n      />\n    </>\n  );\n};\n\nexport default PaasCalculator;\n"]},"metadata":{},"sourceType":"module"}